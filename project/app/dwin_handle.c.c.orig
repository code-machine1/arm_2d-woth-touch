#include "dwin_handle.h"
#include "FWG2_handle.h"
#include "stdio.h"
DwinObjectType sdwin;
//通道号码

uint8_t direct_temp_buff[14]  = {0x5a, 0xa5, 0x0b, 0x82, 0x03, 0x10, 0x5a, 0xa5, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00};
uint8_t direct_wind_buff[14]  = {0x5a, 0xa5, 0x0b, 0x82, 0x03, 0x10, 0x5a, 0xa5, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00};

uint8_t cyclone_temp_buff[14] = {0x5a, 0xa5, 0x0b, 0x82, 0x03, 0x10, 0x5a, 0xa5, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00};
uint8_t cyclone_wind_buff[14] = {0x5a, 0xa5, 0x0b, 0x82, 0x03, 0x10, 0x5a, 0xa5, 0x01, 0x00, 0x03, 0x01, 0x00, 0x00};


uint8_t code_temp_buff[14]    = {0x5a, 0xa5, 0x0b, 0x82, 0x03, 0x10, 0x5a, 0xa5, 0x01, 0x00, 0x04, 0x01, 0x00, 0x00};
uint8_t code_wind_buff[14]    = {0x5a, 0xa5, 0x0b, 0x82, 0x03, 0x10, 0x5a, 0xa5, 0x01, 0x00, 0x05, 0x01, 0x00, 0x00};

uint8_t page_switch[10] = {0x5a, 0xa5, 0x07, 0x82, 0x00, 0x84, 0x5a, 0x01, 0x00, 0x01};


static void WriteDataToLCD(DwinObjectType * dwim, uint16_t startAddress, uint16_t length, uint16_t data);
static void RecvDataFromLCD(DwinObjectType *dwim);
/* CRC16校验（X16+X15+X2+1）*/
static uint16_t CalcDwinCRC16(uint8_t *buf, uint16_t length);

static void WriteDataToLCD(DwinObjectType * dwim, uint16_t startAddress, uint16_t length, uint16_t data)
{
    /*命令的长度由帧头（2个字节）+数据长度（1个字节）+指令（1个字节）+起始地址（2个字节）+数据（长度为length）*/
    dwim->tx_buff[0] = 0x5a;
    dwim->tx_buff[1] = 0xa5;
    dwim->tx_buff[2] = (uint8_t)length + 3;
    dwim->tx_buff[3] =  FC_VAR_Write;
    dwim->tx_buff[4] = (uint8_t)((startAddress >> 8) & 0xff); //起始地址
    dwim->tx_buff[5] = (uint8_t)(startAddress & 0XFF); //起始地址
    dwim->tx_buff[6] = (uint8_t)((data >> 8) & 0xff);
    dwim->tx_buff[7] = (uint8_t)(data & 0XFF);
    /* send data */
    usart_sendData(DWIN_USART, dwim->tx_buff, MAX_SEND_LEN);
}


static void RecvDataFromLCD(DwinObjectType *dwim)
{
    dwim->read_size = usart_receiveData(DWIN_USART, dwim->rx_buff);
#if 1

    if (dwim->read_size == MAX_RECV_LEN)
    {
        /* check head */
        if (CHECK_HEAD(dwim->rx_buff[FRAME_HEAD1], dwim->rx_buff[FRAME_HEAD2]))
        {
            /* get data */
            switch (dwim->rx_buff[FRAME_Address_L])
            {
            /* start the page 1 data revc of */
            case SHOW_DIRECT_ERROR_CODE:
                break;

            case SHOW_DIRECT_HANDLE_MODE:
                break;

            case SHOW_CYCLONE_HANDLE_MODE:
                break;

            case SHOW_DIRECT_WORKING_STATE:
                break;

            case SHOW_CYCLONE_WORKING_STATE:
                break;

            case SHOW_DIRECT_FAN_GIF_H:
                break;

            case SHOW_DIRECT_FAN_GIF_L:
                break;

            case SHOW_CYCLONE_FAN_GIF_H:
                break;

            case SHOW_CYCLONE_FAN_GIF_L:
                break;

            case SHOW_DIRECT_CURRENT_TEMP:
                break;

            case SHOW_DIRECT_CURRENT_TEMP_BAR:
                break;

            case SHOW_DIRECT_CURRENT_WIND_BAR:
                break;

            case SHOW_CYCLONE_CURRENT_TEMP:
                break;

            case SHOW_CYCLONE_CURRENT_TEMP_BAR:
                break;

            case SHOW_CYCLONE_CURRENT_WIND_BAR:
                break;

            case SHOW_COUNTDOWN:
                break;

            /* direct handle temp set */
            case SHOW_DIRECT_SET_TEMP:
                sFWG2_t.Direct_handle_parameter.set_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.Direct_handle_parameter.set_temp = (sFWG2_t.Direct_handle_parameter.set_temp - 32) * 5 / 9;
                }

                if (sFWG2_t.Direct_handle_parameter.set_temp <= 100)
                {
                    sFWG2_t.Direct_handle_parameter.set_temp = 100;
                }

                if (sFWG2_t.Direct_handle_parameter.set_temp >= 500)
                {
                    sFWG2_t.Direct_handle_parameter.set_temp = 100;
                }

                break;

            /* direct handle wind set */
            case SHOW_DIRECT_SET_WIND:
                sFWG2_t.Direct_handle_parameter.set_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            /* cyclone handle temp set */
            case SHOW_CYCLONE_SET_TEMP:
                sFWG2_t.Cyclone_handle_parameter.set_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.Cyclone_handle_parameter.set_temp = (sFWG2_t.Cyclone_handle_parameter.set_temp - 32) * 5 / 9;
                }

                if (sFWG2_t.Cyclone_handle_parameter.set_temp <= 100)
                {
                    sFWG2_t.Cyclone_handle_parameter.set_temp = 100;
                }

                if (sFWG2_t.Cyclone_handle_parameter.set_temp >= 500)
                {
                    sFWG2_t.Cyclone_handle_parameter.set_temp = 100;
                }

                break;

            /* cyclone handle wind set */
            case SHOW_CYCLONE_SET_WIND:
                sFWG2_t.Cyclone_handle_parameter.set_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            /* set handle channel */
            case SET_CHANNEL:
                sFWG2_t.general_parameter.ch = dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.fwg2_page == PAGE_MAIN)
                {
                    if (dwim->rx_buff[FRAME_VAL_L] == 1)
                    {
                        sFWG2_t.Cyclone_handle_parameter.set_temp = sFWG2_t.general_parameter.ch1_set_temp;
                        sFWG2_t.Cyclone_handle_parameter.set_wind = sFWG2_t.general_parameter.ch1_set_wind ;
                        sFWG2_t.Cyclone_handle_parameter.set_time = sFWG2_t.general_parameter.ch1_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch1_set_time;
                        sFWG2_t.Direct_handle_parameter.set_temp = sFWG2_t.general_parameter.ch1_set_temp;
                        sFWG2_t.Direct_handle_parameter.set_wind = sFWG2_t.general_parameter.ch1_set_wind ;
                        sFWG2_t.Direct_handle_parameter.set_time = sFWG2_t.general_parameter.ch1_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch1_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 2)
                    {
                        sFWG2_t.Cyclone_handle_parameter.set_temp = sFWG2_t.general_parameter.ch2_set_temp;
                        sFWG2_t.Cyclone_handle_parameter.set_wind = sFWG2_t.general_parameter.ch2_set_wind ;
                        sFWG2_t.Cyclone_handle_parameter.set_time = sFWG2_t.general_parameter.ch2_set_time;
                        sFWG2_t.Direct_handle_parameter.set_temp = sFWG2_t.general_parameter.ch2_set_temp;
                        sFWG2_t.Direct_handle_parameter.set_wind = sFWG2_t.general_parameter.ch2_set_wind ;
                        sFWG2_t.Direct_handle_parameter.set_time = sFWG2_t.general_parameter.ch2_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch2_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 3)
                    {
                        sFWG2_t.Cyclone_handle_parameter.set_temp = sFWG2_t.general_parameter.ch3_set_temp;
                        sFWG2_t.Cyclone_handle_parameter.set_wind = sFWG2_t.general_parameter.ch3_set_wind ;
                        sFWG2_t.Cyclone_handle_parameter.set_time = sFWG2_t.general_parameter.ch3_set_time;
                        sFWG2_t.Direct_handle_parameter.set_temp = sFWG2_t.general_parameter.ch3_set_temp;
                        sFWG2_t.Direct_handle_parameter.set_wind = sFWG2_t.general_parameter.ch3_set_wind ;
                        sFWG2_t.Direct_handle_parameter.set_time = sFWG2_t.general_parameter.ch3_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch3_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 4)
                    {
                        sFWG2_t.Cyclone_handle_parameter.set_temp = sFWG2_t.general_parameter.ch4_set_temp;
                        sFWG2_t.Cyclone_handle_parameter.set_wind = sFWG2_t.general_parameter.ch4_set_wind ;
                        sFWG2_t.Cyclone_handle_parameter.set_time = sFWG2_t.general_parameter.ch4_set_time;
                        sFWG2_t.Direct_handle_parameter.set_temp = sFWG2_t.general_parameter.ch4_set_temp;
                        sFWG2_t.Direct_handle_parameter.set_wind = sFWG2_t.general_parameter.ch4_set_wind ;
                        sFWG2_t.Direct_handle_parameter.set_time = sFWG2_t.general_parameter.ch4_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch4_set_time;
                    }
                }
                else if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_DIRECT_WORK)
                {
                    if (dwim->rx_buff[FRAME_VAL_L] == 1)
                    {
                        sFWG2_t.Direct_handle_parameter.set_temp = sFWG2_t.general_parameter.ch1_set_temp;
                        sFWG2_t.Direct_handle_parameter.set_wind = sFWG2_t.general_parameter.ch1_set_wind ;
                        sFWG2_t.Direct_handle_parameter.set_time = sFWG2_t.general_parameter.ch1_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch1_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 2)
                    {
                        sFWG2_t.Direct_handle_parameter.set_temp = sFWG2_t.general_parameter.ch2_set_temp;
                        sFWG2_t.Direct_handle_parameter.set_wind = sFWG2_t.general_parameter.ch2_set_wind ;
                        sFWG2_t.Direct_handle_parameter.set_time = sFWG2_t.general_parameter.ch2_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch2_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 3)
                    {
                        sFWG2_t.Direct_handle_parameter.set_temp = sFWG2_t.general_parameter.ch3_set_temp;
                        sFWG2_t.Direct_handle_parameter.set_wind = sFWG2_t.general_parameter.ch3_set_wind ;
                        sFWG2_t.Direct_handle_parameter.set_time = sFWG2_t.general_parameter.ch3_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch3_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 4)
                    {
                        sFWG2_t.Direct_handle_parameter.set_temp = sFWG2_t.general_parameter.ch4_set_temp;
                        sFWG2_t.Direct_handle_parameter.set_wind = sFWG2_t.general_parameter.ch4_set_wind;
                        sFWG2_t.Direct_handle_parameter.set_time = sFWG2_t.general_parameter.ch4_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch4_set_time;
                    }
                }
                else if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_CYCLONE_WORK)
                {
                    if (dwim->rx_buff[FRAME_VAL_L] == 1)
                    {
                        sFWG2_t.Cyclone_handle_parameter.set_temp = sFWG2_t.general_parameter.ch1_set_temp;
                        sFWG2_t.Cyclone_handle_parameter.set_wind = sFWG2_t.general_parameter.ch1_set_wind ;
                        sFWG2_t.Cyclone_handle_parameter.set_time = sFWG2_t.general_parameter.ch1_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch1_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 2)
                    {
                        sFWG2_t.Cyclone_handle_parameter.set_temp = sFWG2_t.general_parameter.ch2_set_temp;
                        sFWG2_t.Cyclone_handle_parameter.set_wind = sFWG2_t.general_parameter.ch2_set_wind ;
                        sFWG2_t.Cyclone_handle_parameter.set_time = sFWG2_t.general_parameter.ch2_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch2_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 3)
                    {
                        sFWG2_t.Cyclone_handle_parameter.set_temp = sFWG2_t.general_parameter.ch3_set_temp;
                        sFWG2_t.Cyclone_handle_parameter.set_wind = sFWG2_t.general_parameter.ch3_set_wind ;
                        sFWG2_t.Cyclone_handle_parameter.set_time = sFWG2_t.general_parameter.ch3_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch3_set_time;
                    }
                    else if (dwim->rx_buff[FRAME_VAL_L] == 4)
                    {
                        sFWG2_t.Cyclone_handle_parameter.set_temp = sFWG2_t.general_parameter.ch4_set_temp;
                        sFWG2_t.Cyclone_handle_parameter.set_wind = sFWG2_t.general_parameter.ch4_set_wind;
                        sFWG2_t.Cyclone_handle_parameter.set_time = sFWG2_t.general_parameter.ch4_set_time;
                        sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch4_set_time;
                    }
                }

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.Direct_handle_parameter.set_temp_f_display  =  9 * sFWG2_t.Direct_handle_parameter.set_temp  / 5  + 32;
                    sFWG2_t.Cyclone_handle_parameter.set_temp_f_display  =  9 * sFWG2_t.Cyclone_handle_parameter.set_temp  / 5  + 32;
                }

                break;

            /* end the page 1 data revc of */

            /* start the page 3 and page 4 data revc of */
            case PAGE_ID:
                sFWG2_t.general_parameter.fwg2_page = (fwg2_page_e)dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            /* end the page 3 and page 4 data revc of */

            /* start the page 5 data revc of */
            case FWG2_WORK_MODE:
                sFWG2_t.general_parameter.work_mode = (fwg2_work_e)dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.work_mode == CODE)
                {
                    /* jump to page 28 */
                    page_switch[9] = PAGE_SHOW_CODE_WORK;
                    usart_sendData(DWIN_USART, page_switch, 10);
                    sFWG2_t.general_parameter.fwg2_page = PAGE_SHOW_CODE_WORK;
                }

                break;

            /* end the page 5 data revc of */

            /* start the page 6 data revc of */
            case SHOW_CH1_SET_TEMP:
                sFWG2_t.general_parameter.ch1_set_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.general_parameter.ch1_set_temp = (sFWG2_t.general_parameter.ch1_set_temp - 32) * 5 / 9;
                }

                if (sFWG2_t.general_parameter.ch1_set_temp <= 100)
                {
                    sFWG2_t.general_parameter.ch1_set_temp = 100;
                }

                if (sFWG2_t.general_parameter.ch1_set_temp >= 500)
                {
                    sFWG2_t.general_parameter.ch1_set_temp = 500;
                }

                break;

            case SHOW_CH1_SET_WIND:
                sFWG2_t.general_parameter.ch1_set_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SHOW_CH1_SET_TIME:
                sFWG2_t.general_parameter.ch1_set_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SHOW_CH2_SET_TEMP:
                sFWG2_t.general_parameter.ch2_set_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.general_parameter.ch2_set_temp = (sFWG2_t.general_parameter.ch2_set_temp - 32) * 5 / 9;
                }

                if (sFWG2_t.general_parameter.ch2_set_temp <= 100)
                {
                    sFWG2_t.general_parameter.ch2_set_temp = 100;
                }

                if (sFWG2_t.general_parameter.ch2_set_temp >= 500)
                {
                    sFWG2_t.general_parameter.ch2_set_temp = 500;
                }

                break;

            case SHOW_CH2_SET_WIND:
                sFWG2_t.general_parameter.ch2_set_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SHOW_CH2_SET_TIME:
                sFWG2_t.general_parameter.ch2_set_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SHOW_CH3_SET_TEMP:
                sFWG2_t.general_parameter.ch3_set_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.general_parameter.ch3_set_temp = (sFWG2_t.general_parameter.ch3_set_temp - 32) * 5 / 9;
                }

                if (sFWG2_t.general_parameter.ch3_set_temp <= 100)
                {
                    sFWG2_t.general_parameter.ch3_set_temp = 100;
                }

                if (sFWG2_t.general_parameter.ch3_set_temp >= 500)
                {
                    sFWG2_t.general_parameter.ch3_set_temp = 500;
                }

                break;

            case SHOW_CH3_SET_WIND:
                sFWG2_t.general_parameter.ch3_set_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SHOW_CH3_SET_TIME:
                sFWG2_t.general_parameter.ch3_set_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                //sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch3_set_time;
                break;

            case SHOW_CH4_SET_TEMP:
                sFWG2_t.general_parameter.ch4_set_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.general_parameter.ch4_set_temp = (sFWG2_t.general_parameter.ch4_set_temp - 32) * 5 / 9;
                }

                if (sFWG2_t.general_parameter.ch4_set_temp <= 100)
                {
                    sFWG2_t.general_parameter.ch4_set_temp = 100;
                }

                if (sFWG2_t.general_parameter.ch4_set_temp >= 500)
                {
                    sFWG2_t.general_parameter.ch4_set_temp = 500;
                }

                break;

            case SHOW_CH4_SET_WIND:
                sFWG2_t.general_parameter.ch4_set_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SHOW_CH4_SET_TIME:
                sFWG2_t.general_parameter.ch4_set_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                //sFWG2_t.general_parameter.countdown_time  = sFWG2_t.general_parameter.ch4_set_time;
                break;

            /* end the page 6 data revc of */

            /* start the page 7 data revc of */
            case CODE_CHANNEL:
                sFWG2_t.general_parameter.code_ch = dwim->rx_buff[FRAME_VAL_L];
                break;

            case SET_PRE_TEMP:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_pre_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code0_pre_temp = (sFWG2_t.general_parameter.code0_pre_temp - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code0_pre_temp <= 100)
                    {
                        sFWG2_t.general_parameter.code0_pre_temp = 100;
                    }

                    if (sFWG2_t.general_parameter.code0_pre_temp >= 500)
                    {
                        sFWG2_t.general_parameter.code0_pre_temp = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_pre_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code1_pre_temp = (sFWG2_t.general_parameter.code1_pre_temp - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code1_pre_temp <= 100)
                    {
                        sFWG2_t.general_parameter.code1_pre_temp = 100;
                    }

                    if (sFWG2_t.general_parameter.code1_pre_temp >= 500)
                    {
                        sFWG2_t.general_parameter.code1_pre_temp = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_pre_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code2_pre_temp = (sFWG2_t.general_parameter.code2_pre_temp - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code2_pre_temp <= 100)
                    {
                        sFWG2_t.general_parameter.code2_pre_temp = 100;
                    }

                    if (sFWG2_t.general_parameter.code2_pre_temp >= 500)
                    {
                        sFWG2_t.general_parameter.code2_pre_temp = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_pre_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code3_pre_temp = (sFWG2_t.general_parameter.code3_pre_temp - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code3_pre_temp <= 100)
                    {
                        sFWG2_t.general_parameter.code3_pre_temp = 100;
                    }

                    if (sFWG2_t.general_parameter.code3_pre_temp >= 500)
                    {
                        sFWG2_t.general_parameter.code3_pre_temp = 500;
                    }
                }

                break;

            case SET_PRE_WIND:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_pre_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_pre_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_pre_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_pre_wind = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case SET_PRE_TIME:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_pre_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_pre_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_pre_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_pre_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case SET_WORK_TEMP1:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_temp_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code0_temp_1 = (sFWG2_t.general_parameter.code0_temp_1 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code0_temp_1 <= 100)
                    {
                        sFWG2_t.general_parameter.code0_temp_1 = 100;
                    }

                    if (sFWG2_t.general_parameter.code0_temp_1 >= 500)
                    {
                        sFWG2_t.general_parameter.code0_temp_1 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_temp_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code1_temp_1 = (sFWG2_t.general_parameter.code1_temp_1 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code1_temp_1 <= 100)
                    {
                        sFWG2_t.general_parameter.code1_temp_1 = 100;
                    }

                    if (sFWG2_t.general_parameter.code1_temp_1 >= 500)
                    {
                        sFWG2_t.general_parameter.code1_temp_1 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_temp_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code2_temp_1 = (sFWG2_t.general_parameter.code2_temp_1 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code2_temp_1 <= 100)
                    {
                        sFWG2_t.general_parameter.code2_temp_1 = 100;
                    }

                    if (sFWG2_t.general_parameter.code2_temp_1 >= 500)
                    {
                        sFWG2_t.general_parameter.code2_temp_1 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_temp_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code3_temp_1 = (sFWG2_t.general_parameter.code3_temp_1 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code3_temp_1 <= 100)
                    {
                        sFWG2_t.general_parameter.code3_temp_1 = 100;
                    }

                    if (sFWG2_t.general_parameter.code3_temp_1 >= 500)
                    {
                        sFWG2_t.general_parameter.code3_temp_1 = 500;
                    }
                }

                break;

            case SET_WORK_WIND1:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_wind_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_wind_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_wind_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_wind_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case SET_WORK_TIME1:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_time_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_time_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_time_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_time_1 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case SET_WORK_TEMP2:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_temp_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code0_temp_2 = (sFWG2_t.general_parameter.code0_temp_2 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code0_temp_2 <= 100)
                    {
                        sFWG2_t.general_parameter.code0_temp_2 = 100;
                    }

                    if (sFWG2_t.general_parameter.code0_temp_2 >= 500)
                    {
                        sFWG2_t.general_parameter.code0_temp_2 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_temp_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code1_temp_2 = (sFWG2_t.general_parameter.code1_temp_2 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code1_temp_2 <= 100)
                    {
                        sFWG2_t.general_parameter.code1_temp_2 = 100;
                    }

                    if (sFWG2_t.general_parameter.code1_temp_2 >= 500)
                    {
                        sFWG2_t.general_parameter.code1_temp_2 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_temp_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code2_temp_2 = (sFWG2_t.general_parameter.code2_temp_2 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code2_temp_2 <= 100)
                    {
                        sFWG2_t.general_parameter.code2_temp_2 = 100;
                    }

                    if (sFWG2_t.general_parameter.code2_temp_2 >= 500)
                    {
                        sFWG2_t.general_parameter.code2_temp_2 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_temp_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code3_temp_2 = (sFWG2_t.general_parameter.code3_temp_2 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code3_temp_2 <= 100)
                    {
                        sFWG2_t.general_parameter.code3_temp_2 = 100;
                    }

                    if (sFWG2_t.general_parameter.code3_temp_2 >= 500)
                    {
                        sFWG2_t.general_parameter.code3_temp_2 = 500;
                    }
                }

                break;

            case SET_WORK_WIND2:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_wind_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_wind_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_wind_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_wind_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case SET_WORK_TIME2:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_time_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_time_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_time_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_time_2 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case SET_WORK_TEMP3:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_temp_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code0_temp_3 = (sFWG2_t.general_parameter.code0_temp_3 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code0_temp_3 <= 100)
                    {
                        sFWG2_t.general_parameter.code0_temp_3 = 100;
                    }

                    if (sFWG2_t.general_parameter.code0_temp_3 >= 500)
                    {
                        sFWG2_t.general_parameter.code0_temp_3 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_temp_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code1_temp_3 = (sFWG2_t.general_parameter.code1_temp_3 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code1_temp_3 <= 100)
                    {
                        sFWG2_t.general_parameter.code1_temp_3 = 100;
                    }

                    if (sFWG2_t.general_parameter.code1_temp_3 >= 500)
                    {
                        sFWG2_t.general_parameter.code1_temp_3 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_temp_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code2_temp_3 = (sFWG2_t.general_parameter.code2_temp_3 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code2_temp_3 <= 100)
                    {
                        sFWG2_t.general_parameter.code2_temp_3 = 100;
                    }

                    if (sFWG2_t.general_parameter.code2_temp_3 >= 500)
                    {
                        sFWG2_t.general_parameter.code2_temp_3 = 500;
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_temp_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                    if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                    {
                        sFWG2_t.general_parameter.code3_temp_3 = (sFWG2_t.general_parameter.code3_temp_3 - 32) * 5 / 9;
                    }

                    if (sFWG2_t.general_parameter.code3_temp_3 <= 100)
                    {
                        sFWG2_t.general_parameter.code3_temp_3 = 100;
                    }

                    if (sFWG2_t.general_parameter.code3_temp_3 >= 500)
                    {
                        sFWG2_t.general_parameter.code3_temp_3 = 500;
                    }
                }

                break;

            case SET_WORK_WIND3:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_wind_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_wind_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_wind_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_wind_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case SET_WORK_TIME3:
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    sFWG2_t.general_parameter.code0_time_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    sFWG2_t.general_parameter.code1_time_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    sFWG2_t.general_parameter.code2_time_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    sFWG2_t.general_parameter.code3_time_3 = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case SHOW_CODE_STEP:
                break;

            case CODE_MODE_HANDLE_SELECT:

                /* select work handle when the handle not work */
                if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_STOP)
                {
                    sFWG2_t.general_parameter.code_mode_handle_select = (fwg2_code_mode_handle_select_e)dwim->rx_buff[FRAME_VAL_L];
                }

                break;

            case START_STOP_CODE_MODE:
                sFWG2_t.general_parameter.code_mode_state = (fwg2_code_mode_state_e)dwim->rx_buff[FRAME_VAL_H] * 256 +
                    dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_START)
                {
                    sFWG2_t.general_parameter.code_mode_countdown_time_display = sFWG2_t.general_parameter.code0_pre_time;
                    sFWG2_t.general_parameter.code_mode_step = CODE_PRE_HEAT;
                }
                else if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_STOP)
                {
                    sFWG2_t.general_parameter.code_mode_step = CODE_WAIT;
                }

                break;

            /* end the page 7 data revc of */

            /* start the page 8 data revc of */
            case SET_TEMP_UNITS:
                sFWG2_t.general_parameter.temp_uint = (fwg2_temp_unit_e)dwim->rx_buff[FRAME_VAL_L];
                break;

            /* end the page 8 data revc of */

            /* start the page 9 data revc of */
            case SET_SPEAKER_FUNCTION:
                sFWG2_t.general_parameter.speak_state = (fwg2_speaker_state_e)dwim->rx_buff[FRAME_VAL_L];
                break;

            /* end the page 9 data revc of */
            /* end the page 10 data revc of */
            case SET_DISPLAY_LOCK_MODE:
                sFWG2_t.general_parameter.display_lock_state = (fwg2_temp_lock_state_e)dwim->rx_buff[FRAME_VAL_L];
                break;

            /* end the page 10 data revc of */
            case SET_FN_KEY_MODE:
                sFWG2_t.general_parameter.fn_key_set = (fwg2_fn_key_set_e)dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SET_ENHANCE_TEMP:
                sFWG2_t.Cyclone_handle_parameter.quick_work_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                sFWG2_t.Direct_handle_parameter.quick_work_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    if (sFWG2_t.Cyclone_handle_parameter.quick_work_temp <= 33 || sFWG2_t.Direct_handle_parameter.quick_work_temp <= 33)
                    {
                        sFWG2_t.Cyclone_handle_parameter.quick_work_temp = 33;
                        sFWG2_t.Direct_handle_parameter.quick_work_temp = 33;
                    }

                    if (sFWG2_t.Cyclone_handle_parameter.quick_work_temp >= 212 || sFWG2_t.Direct_handle_parameter.quick_work_temp >= 212)
                    {
                        sFWG2_t.Cyclone_handle_parameter.quick_work_temp = 212;
                        sFWG2_t.Direct_handle_parameter.quick_work_temp = 212;
                    }

                    sFWG2_t.Cyclone_handle_parameter.quick_work_temp = (sFWG2_t.Cyclone_handle_parameter.quick_work_temp - 32) * 5 / 9;
                    sFWG2_t.Direct_handle_parameter.quick_work_temp = (sFWG2_t.Direct_handle_parameter.quick_work_temp - 32) * 5 / 9;
                }
                else if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    if (sFWG2_t.Cyclone_handle_parameter.quick_work_temp <= 0 || sFWG2_t.Direct_handle_parameter.quick_work_temp <= 0)
                    {
                        sFWG2_t.Cyclone_handle_parameter.quick_work_temp = 0;
                        sFWG2_t.Direct_handle_parameter.quick_work_temp = 0;
                    }

                    if (sFWG2_t.Cyclone_handle_parameter.quick_work_temp >= 100 || sFWG2_t.Direct_handle_parameter.quick_work_temp >= 100)
                    {
                        sFWG2_t.Cyclone_handle_parameter.quick_work_temp = 100;
                        sFWG2_t.Direct_handle_parameter.quick_work_temp = 100;
                    }
                }

                break;

            case SET_ENHANCE_COUNTDOWN_TIME:
                sFWG2_t.Cyclone_handle_parameter.quick_work_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                sFWG2_t.Direct_handle_parameter.quick_work_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SET_CYCLONE_CALIBRATE_TEMP:
                sFWG2_t.Cyclone_handle_parameter.set_calibration_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.Cyclone_handle_parameter.set_calibration_temp = (sFWG2_t.Cyclone_handle_parameter.set_calibration_temp - 32) *
                        5 / 9;
                }

                sFWG2_t.Cyclone_handle_parameter.set_calibration_temp  =  sFWG2_t.Cyclone_handle_parameter.set_calibration_temp -
                    sFWG2_t.Cyclone_handle_parameter.set_temp;

                if (sFWG2_t.Cyclone_handle_parameter.set_calibration_temp >= 50)
                {
                    sFWG2_t.Cyclone_handle_parameter.set_calibration_temp = 50;
                }

                if (sFWG2_t.Cyclone_handle_parameter.set_calibration_temp <= -50)
                {
                    sFWG2_t.Cyclone_handle_parameter.set_calibration_temp = -50;
                }

                break;

            case SET_DIRECT_CALIBRATE_TEMP:
                sFWG2_t.Direct_handle_parameter.set_calibration_temp = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sFWG2_t.Direct_handle_parameter.set_calibration_temp = (sFWG2_t.Direct_handle_parameter.set_calibration_temp - 32) *
                        5 / 9;
                }

                sFWG2_t.Direct_handle_parameter.set_calibration_temp  =  sFWG2_t.Direct_handle_parameter.set_calibration_temp -
                    sFWG2_t.Direct_handle_parameter.set_temp;
                ;

                if (sFWG2_t.Direct_handle_parameter.set_calibration_temp >= 50)
                {
                    sFWG2_t.Direct_handle_parameter.set_calibration_temp = 50;
                }

                if (sFWG2_t.Direct_handle_parameter.set_calibration_temp <= -50)
                {
                    sFWG2_t.Direct_handle_parameter.set_calibration_temp = -50;
                }

                break;

            case SET_TIME:
                sFWG2_t.general_parameter.countdown_time = dwim->rx_buff[FRAME_VAL_H] * 256 + dwim->rx_buff[FRAME_VAL_L];
                break;

            case SET_TOUCH_FUNCTION:
                sFWG2_t.general_parameter.touch_key_set = (fwg2_touch_key_set_e)dwim->rx_buff[FRAME_VAL_L];
                break;

            case SET_UART_FUNCTION:
                sFWG2_t.general_parameter.uart_state = (fwg2_uart_state_e)dwim->rx_buff[FRAME_VAL_L];
                break;

            case SHOW_HARDWARE_VER:
                break;

            case SHOW_SOFTWARE_VER:
                break;

            case RESET_FWG2:
                sFWG2_t.general_parameter.reset_fwg2_flag = dwim->rx_buff[FRAME_VAL_L];

                if (sFWG2_t.general_parameter.reset_fwg2_flag == true)
                {
                    sFWG2_t.general_parameter.reset_fwg2_flag = false;
                    /* reset direct handle's value */
                    sFWG2_t.Direct_handle_parameter.set_temp 			  = 380;
                    sFWG2_t.Direct_handle_parameter.set_wind 			  = 60;
                    sFWG2_t.Direct_handle_parameter.set_time 			  = 30;
                    sFWG2_t.Direct_handle_parameter.cold_mode_set_wind    = 100;
                    sFWG2_t.Direct_handle_parameter.quick_work_temp       = 50;
                    sFWG2_t.Direct_handle_parameter.quick_work_time       = 10;
                    sFWG2_t.Direct_handle_parameter.set_calibration_temp  = 0;
                    /* reset cyclone handle's value */
                    sFWG2_t.Cyclone_handle_parameter.set_temp 			  = 380;
                    sFWG2_t.Cyclone_handle_parameter.set_wind 			  = 60;
                    sFWG2_t.Cyclone_handle_parameter.set_time 			  = 30;
                    sFWG2_t.Cyclone_handle_parameter.cold_mode_set_wind   = 100;
                    sFWG2_t.Cyclone_handle_parameter.quick_work_temp      = 50;
                    sFWG2_t.Cyclone_handle_parameter.quick_work_time      = 10;
                    sFWG2_t.Cyclone_handle_parameter.set_calibration_temp = 0;
                    /* reset general value */
                    sFWG2_t.general_parameter.temp_uint                   = CELSIUS;
                    sFWG2_t.general_parameter.speak_state                 = SPEAKER_OPEN;
                    sFWG2_t.general_parameter.display_lock_state          = LOCK;
                    sFWG2_t.general_parameter.fn_key_set                  = SELECT_QUICK_MODE;
                    sFWG2_t.general_parameter.ota_state                   = OTA_OFF;
                    sFWG2_t.general_parameter.touch_key_set               = TOUCH_CLOSE;
                    sFWG2_t.general_parameter.uart_state                  = UART_CLOSE;
                    sFWG2_t.general_parameter.enhance_state               = ENHANCE_CLOSE;
                    sFWG2_t.general_parameter.countdown_time              = 30;
                    sFWG2_t.general_parameter.ch1_set_temp                = 300;
                    sFWG2_t.general_parameter.ch1_set_wind                = 40;
                    sFWG2_t.general_parameter.ch1_set_time                = 30;
                    sFWG2_t.general_parameter.ch2_set_temp                = 320;
                    sFWG2_t.general_parameter.ch2_set_wind                = 50;
                    sFWG2_t.general_parameter.ch2_set_time                = 40;
                    sFWG2_t.general_parameter.ch3_set_temp                = 350;
                    sFWG2_t.general_parameter.ch3_set_wind                = 60;
                    sFWG2_t.general_parameter.ch3_set_time                = 50;
                    sFWG2_t.general_parameter.ch4_set_temp                = 380;
                    sFWG2_t.general_parameter.ch4_set_wind                = 80;
                    sFWG2_t.general_parameter.ch4_set_time                = 60;
#if 0
                    sFWG2_t.general_parameter.code0_pre_temp              = ;
                    sFWG2_t.general_parameter.code0_pre_wind              = ;
                    sFWG2_t.general_parameter.code0_pre_time              = ;
                    sFWG2_t.general_parameter.code0_temp_1                = ;
                    sFWG2_t.general_parameter.code0_wind_1                = ;
                    sFWG2_t.general_parameter.code0_time_1                = ;
                    sFWG2_t.general_parameter.code0_temp_2                = ;
                    sFWG2_t.general_parameter.code0_wind_2                = ;
                    sFWG2_t.general_parameter.code0_time_2                = ;
                    sFWG2_t.general_parameter.code0_temp_3                = ;
                    sFWG2_t.general_parameter.code0_wind_3                = ;
                    sFWG2_t.general_parameter.code0_time_3                = ;
                    sFWG2_t.general_parameter.code0_temp_4                = ;
                    sFWG2_t.general_parameter.code0_wind_4                = ;
                    sFWG2_t.general_parameter.code0_time_4                = ;
                    sFWG2_t.general_parameter.code1_pre_temp              = ;
                    sFWG2_t.general_parameter.code1_pre_wind              = ;
                    sFWG2_t.general_parameter.code1_pre_time              = ;
                    sFWG2_t.general_parameter.code1_temp_1                = ;
                    sFWG2_t.general_parameter.code1_wind_1                = ;
                    sFWG2_t.general_parameter.code1_time_1                = ;
                    sFWG2_t.general_parameter.code1_temp_2                = ;
                    sFWG2_t.general_parameter.code1_wind_2                = ;
                    sFWG2_t.general_parameter.code1_time_2                = ;
                    sFWG2_t.general_parameter.code1_temp_3                = ;
                    sFWG2_t.general_parameter.code1_wind_3                = ;
                    sFWG2_t.general_parameter.code1_time_3                = ;
                    sFWG2_t.general_parameter.code1_temp_4                = ;
                    sFWG2_t.general_parameter.code1_wind_4                = ;
                    sFWG2_t.general_parameter.code1_time_4                = ;
                    sFWG2_t.general_parameter.code2_pre_temp              = ;
                    sFWG2_t.general_parameter.code2_pre_wind              = ;
                    sFWG2_t.general_parameter.code2_pre_time              = ;
                    sFWG2_t.general_parameter.code2_temp_1                = ;
                    sFWG2_t.general_parameter.code2_wind_1                = ;
                    sFWG2_t.general_parameter.code2_time_1                = ;
                    sFWG2_t.general_parameter.code2_temp_2                = ;
                    sFWG2_t.general_parameter.code2_wind_2                = ;
                    sFWG2_t.general_parameter.code2_time_2                = ;
                    sFWG2_t.general_parameter.code2_temp_3                = ;
                    sFWG2_t.general_parameter.code2_wind_3                = ;
                    sFWG2_t.general_parameter.code2_time_3                = ;
                    sFWG2_t.general_parameter.code2_temp_4                = ;
                    sFWG2_t.general_parameter.code2_wind_4                = ;
                    sFWG2_t.general_parameter.code2_time_4                = ;
                    sFWG2_t.general_parameter.code3_pre_temp              = ;
                    sFWG2_t.general_parameter.code3_pre_wind              = ;
                    sFWG2_t.general_parameter.code3_pre_time              = ;
                    sFWG2_t.general_parameter.code3_temp_1                = ;
                    sFWG2_t.general_parameter.code3_wind_1                = ;
                    sFWG2_t.general_parameter.code3_time_1                = ;
                    sFWG2_t.general_parameter.code3_temp_2                = ;
                    sFWG2_t.general_parameter.code3_wind_2                = ;
                    sFWG2_t.general_parameter.code3_time_2                = ;
                    sFWG2_t.general_parameter.code3_temp_3                = ;
                    sFWG2_t.general_parameter.code3_wind_3                = ;
                    sFWG2_t.general_parameter.code3_time_3                = ;
                    sFWG2_t.general_parameter.code3_temp_4                = ;
                    sFWG2_t.general_parameter.code3_wind_4                = ;
                    sFWG2_t.general_parameter.code3_time_4                = ;
#endif
                }

                break;

            case SET_OTA_FUNCTION:
                sFWG2_t.general_parameter.ota_state = (fwg2_ota_state_e)dwim->rx_buff[FRAME_VAL_L];
                break;

            case EN_HANCE_FUNCTION:
                sFWG2_t.general_parameter.enhance_state = (fwg2_enhance_state_e)dwim->rx_buff[FRAME_VAL_L];
                break;
            }
        }

        dwim->read_size = 0;
    }

#endif
}




/*
*   case 0:show direct handle's ste temp or current temp
*   case 1:show direct handle's ste wind
*   case 2:show cyclone handle's ste temp or current temp
*   case 3:show cyclone handle's ste wind
*   case 4:show direct handle and cyclone handle's fan flash
*   case 5:show channel's select state
*   case 6:show handle's work state
*   case 7:show handle's work mode
*   case 8:show error mode
*/

void Page_Main_Heartbeat_Packet(void)
{
    static uint16_t state = 0;
    static uint16_t direct_temp_refirsh_time = DIRECT_TEMP_REFIRSH_TIME;
    static uint16_t cyclone_temp_refirsh_time = CYCLONE_TEMP_REFIRSH_TIME;
    static bool first_in = false;
    /* direct handle value about */
    static uint16_t last_direct_handle_set_temp = 0;
    static uint16_t last_direct_handle_set_temp_f_display = 0;
    static uint16_t last_direct_handle_current_temp = 0;
    static uint16_t last_direct_handle_current_temp_f_display = 0;
    static uint16_t last_direct_handle_set_wind = 0;
    static bool show_direct_currtne_temp_flag = false;
    static bool show_direct_set_temp_flag = false;
    static bool show_direct_set_wind_flag = false;
    static uint8_t show_direct_set_temp_time = 0;
    static uint8_t show_direct_set_wind_time = 0;
    static handle_state_e last_direct_handle_state = HANDLE_SLEEP;
    /* cyclone handle value about */
    static uint16_t last_cyclone_handle_set_temp = 0;
    static uint16_t last_cyclone_handle_set_temp_f_display = 0;
    static uint16_t last_cyclone_handle_current_temp = 0;
    static uint16_t last_cyclone_handle_current_temp_f_display = 0;
    static uint16_t last_cyclone_handle_set_wind = 0;
    static bool show_cyclone_currtne_temp_flag = false;
    static bool show_cyclone_set_temp_flag = false;
    static bool show_cyclone_set_wind_flag = false;
    static uint8_t show_cyclone_set_temp_time = 0;
    static uint8_t show_cyclone_set_wind_time = 0;
    static handle_state_e last_cyclone_handle_state = HANDLE_SLEEP;

    if (sFWG2_t.general_parameter.fwg2_page == PAGE_MAIN)
    {
        switch (state)
        {
        case 0:
#if 1
            if (sFWG2_t.general_parameter.work_mode == NORMAL)
            {
                if (sFWG2_t.Direct_handle_work_mode == NORMAL_MODE  || sFWG2_t.Direct_handle_work_mode == EN_WORKING_MODE)
                {
                    /* show direct handle set temp */
                    if ((last_direct_handle_set_temp != sFWG2_t.Direct_handle_parameter.set_temp) || \
                            last_direct_handle_set_temp_f_display != sFWG2_t.Direct_handle_parameter.set_temp_f_display)
                    {
                        last_direct_handle_set_temp = sFWG2_t.Direct_handle_parameter.set_temp;
                        last_direct_handle_set_temp_f_display = sFWG2_t.Direct_handle_parameter.set_temp_f_display;

                        if (show_direct_set_temp_flag == false)
                        {
                            /* change display */
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                            1);
                            /* change color */
                            sdwin.send_data(&sdwin, (0x6000 + 0x03), DWIN_DATA_BITS,
                                            ORANGE_COLOR);
                            show_direct_set_temp_flag = true;
                        }

                        show_direct_set_temp_time = 0;

                        /* show direct handle set temp */
                        if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_temp);
                        }
                        else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_temp_f_display);
                        }
                    }

                    if (show_direct_set_temp_flag)
                    {
                        show_direct_set_temp_time ++;

                        if (show_direct_set_temp_time >= SHOW_DIRECT_HANDLE_SET_TEMP_TIME)
                        {
                            show_direct_set_temp_time = 0;
                            show_direct_set_temp_flag = false;
                        }
                    }
                    /* show direct handle current temp */
                    else
                    {
                        direct_temp_refirsh_time --;

                        if (!direct_temp_refirsh_time)
                        {
                            direct_temp_refirsh_time = DIRECT_TEMP_REFIRSH_TIME;

                            if (last_direct_handle_current_temp != sFWG2_t.Direct_handle_parameter.actual_temp || \
                                    last_direct_handle_current_temp_f_display != sFWG2_t.Direct_handle_parameter.actual_temp_f_display)
                            {
                                last_direct_handle_current_temp = sFWG2_t.Direct_handle_parameter.actual_temp;
                                last_direct_handle_current_temp_f_display = sFWG2_t.Direct_handle_parameter.actual_temp_f_display;

                                if (sFWG2_t.general_parameter.display_lock_state == UNLOCK)
                                {
                                    /* change display */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                                    0);
                                    /* change color */
                                    sdwin.send_data(&sdwin, (0x6000 + 0x03), DWIN_DATA_BITS, WHITE_COLOR);

                                    /* show direct handle current temp */
                                    if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                    {
                                        if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                                        {
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                            (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp - ENHANCE_TEMP));
                                        }
                                        else
                                        {
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                            (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp));
                                        }
                                    }
                                    else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                    {
                                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                        sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                                    }
                                }
                                else if (sFWG2_t.general_parameter.display_lock_state == LOCK)
                                {
                                    /* change display */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                                    0);
                                    /* change color */
                                    sdwin.send_data(&sdwin, (0x6000 + 0x03), DWIN_DATA_BITS, WHITE_COLOR);

                                    if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                                    {
                                        if ((sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp - ENHANCE_TEMP)
                                                <
                                                (sFWG2_t.Direct_handle_parameter.set_temp  + LOCK_RANGE) && \
                                                (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp  - ENHANCE_TEMP) >
                                                (sFWG2_t.Direct_handle_parameter.set_temp - LOCK_RANGE))
                                        {
                                            /* show direct handle set temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.set_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.set_temp_f_display);
                                            }
                                        }
                                        else
                                        {
                                            /* change display */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                                            0);
                                            /* change color */
                                            sdwin.send_data(&sdwin, (0x6000 + 0x03), DWIN_DATA_BITS, WHITE_COLOR);

                                            /* show direct handle current temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.actual_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                                            }
                                        }
                                    }
                                    else if (sFWG2_t.general_parameter.enhance_state == ENHANCE_CLOSE)
                                    {
                                        if ((sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp) <
                                                (sFWG2_t.Direct_handle_parameter.set_temp  + LOCK_RANGE) && \
                                                (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp) >
                                                (sFWG2_t.Direct_handle_parameter.set_temp - LOCK_RANGE))
                                        {
                                            /* show direct handle set temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.set_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.set_temp_f_display);
                                            }
                                        }
                                        else
                                        {
                                            /* change display */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                                            0);
                                            /* change color */
                                            sdwin.send_data(&sdwin, (0x6000 + 0x03), DWIN_DATA_BITS, WHITE_COLOR);

                                            /* show direct handle current temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.actual_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else if (sFWG2_t.Direct_handle_work_mode == COLD_WIND_MODE)
                {
                    direct_temp_refirsh_time--;

                    if (!direct_temp_refirsh_time)
                    {
                        direct_temp_refirsh_time = DIRECT_TEMP_REFIRSH_TIME;

                        /* show direct handle current temp */
                        if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                        {
                            if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp - ENHANCE_TEMP));
                            }
                            else
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp));
                            }
                        }
                        else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                        }
                    }
                }
            }
            else if (sFWG2_t.general_parameter.work_mode == CODE)
            {
            }

#endif
            state ++;
            break;

        case 1:
#if 1
            if (sFWG2_t.general_parameter.work_mode == NORMAL)
            {
                if (sFWG2_t.Direct_handle_work_mode == NORMAL_MODE || sFWG2_t.Direct_handle_work_mode == EN_WORKING_MODE)
                {
                    /* show direct handle wind */
                    if (show_direct_set_wind_flag == false)
                    {
                        if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && sFWG2_t.Direct_handle_position == NOT_IN_POSSITION)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_SET_WIND), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_wind);
                        }
                        else if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && sFWG2_t.Direct_handle_position == IN_POSSITION)
                        {
                            if (sFWG2_t.Direct_handle_parameter.actual_temp < 65)
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_SET_WIND), DWIN_DATA_BITS,
                                                sFWG2_t.Direct_handle_parameter.set_wind);
                            }
                            else
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_SET_WIND), DWIN_DATA_BITS,
                                                sFWG2_t.Direct_handle_parameter.stop_set_wind);
                            }
                        }
                        else  if (sFWG2_t.Direct_handle_state == HANDLE_SLEEP)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_SET_WIND), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_wind);
                        }

                        if (first_in == false)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_WIND), DWIN_DATA_BITS,
                                            0);
                            sdwin.send_data(&sdwin, (0x6000 + 0x33), DWIN_DATA_BITS,
                                            WHITE_COLOR);
                        }
                    }

                    if (last_direct_handle_set_wind != sFWG2_t.Direct_handle_parameter.set_wind)
                    {
                        last_direct_handle_set_wind = sFWG2_t.Direct_handle_parameter.set_wind;

                        if (show_direct_set_wind_flag == false)
                        {
                            /* change display */
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_WIND), DWIN_DATA_BITS,
                                            1);
                            /* change color */
                            sdwin.send_data(&sdwin, (0x6000 + 0x33), DWIN_DATA_BITS,
                                            BLUE_COLOR);
                            show_direct_set_wind_flag = true;
                        }

                        show_direct_set_wind_time = 0;
                        /* show direct handle set wind */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_SET_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.Direct_handle_parameter.set_wind);
                    }

                    if (show_direct_set_wind_flag)
                    {
                        show_direct_set_wind_time ++;

                        if (show_direct_set_wind_time >= SHOW_DIRECT_HANDLE_SET_WIND_TIME)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_WIND), DWIN_DATA_BITS,
                                            0);
                            sdwin.send_data(&sdwin, (0x6000 + 0x33), DWIN_DATA_BITS,
                                            WHITE_COLOR);
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_SET_WIND), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_wind);
                            show_direct_set_wind_time = 0;
                            show_direct_set_wind_flag = false;
                        }
                    }
                }
                else if (sFWG2_t.Direct_handle_work_mode == COLD_WIND_MODE)
                {
                    sdwin.send_data(&sdwin, (0x6000 + 0x33), DWIN_DATA_BITS,
                                    BLUE_COLOR);
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_SET_WIND), DWIN_DATA_BITS,
                                    sFWG2_t.Direct_handle_parameter.cold_mode_set_wind);
                }
            }
            else if (sFWG2_t.general_parameter.work_mode == CODE)
            {
            }

#endif
            state = 2;
            break;

        case 2:
#if 1
            if (sFWG2_t.general_parameter.work_mode == NORMAL)
            {
                if (sFWG2_t.Cyclone_handle_work_mode == NORMAL_MODE  || sFWG2_t.Cyclone_handle_work_mode == EN_WORKING_MODE)
                {
                    /* show cyclone handle set temp */
                    if ((last_cyclone_handle_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp) || \
                            last_cyclone_handle_set_temp_f_display != sFWG2_t.Cyclone_handle_parameter.set_temp_f_display)
                    {
                        last_cyclone_handle_set_temp = sFWG2_t.Cyclone_handle_parameter.set_temp;
                        last_cyclone_handle_set_temp_f_display = sFWG2_t.Cyclone_handle_parameter.set_temp_f_display;

                        if (show_cyclone_set_temp_flag == false)
                        {
                            /* change display */
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                            1);
                            /* change color */
                            sdwin.send_data(&sdwin, (0x6000 + 0x63), DWIN_DATA_BITS,
                                            ORANGE_COLOR);
                            show_cyclone_set_temp_flag = true;
                        }

                        show_cyclone_set_temp_time = 0;

                        /* show cyclone handle set temp */
                        if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_temp);
                        }
                        else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_temp_f_display);
                        }
                    }

                    if (show_cyclone_set_temp_flag)
                    {
                        show_cyclone_set_temp_time ++;

                        if (show_cyclone_set_temp_time >= SHOW_CYCLONE_HANDLE_SET_TEMP_TIME)
                        {
                            show_cyclone_set_temp_time = 0;
                            show_cyclone_set_temp_flag = false;
                        }
                    }
                    /* show cyclone handle current temp */
                    else
                    {
                        cyclone_temp_refirsh_time --;

                        if (!cyclone_temp_refirsh_time)
                        {
                            cyclone_temp_refirsh_time = CYCLONE_TEMP_REFIRSH_TIME;

                            if (last_cyclone_handle_current_temp != sFWG2_t.Cyclone_handle_parameter.actual_temp || \
                                    last_cyclone_handle_current_temp_f_display != sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display)
                            {
                                last_cyclone_handle_current_temp = sFWG2_t.Cyclone_handle_parameter.actual_temp;
                                last_cyclone_handle_current_temp_f_display = sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display;

                                if (sFWG2_t.general_parameter.display_lock_state == UNLOCK)
                                {
                                    /* change display */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                                    0);
                                    /* change color */
                                    sdwin.send_data(&sdwin, (0x6000 + 0x63), DWIN_DATA_BITS, WHITE_COLOR);

                                    /* show cyclone handle current temp */
                                    if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                    {
                                        if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                                        {
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                            (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp - ENHANCE_TEMP));
                                        }
                                        else
                                        {
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                            (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp));
                                        }
                                    }
                                    else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                    {
                                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                        sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                                    }
                                }
                                else if (sFWG2_t.general_parameter.display_lock_state == LOCK)
                                {
                                    /* change display */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                                    0);
                                    /* change color */
                                    sdwin.send_data(&sdwin, (0x6000 + 0x63), DWIN_DATA_BITS, WHITE_COLOR);

                                    if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                                    {
                                        if ((sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp -
                                                ENHANCE_TEMP) <
                                                (sFWG2_t.Cyclone_handle_parameter.set_temp  + LOCK_RANGE) && \
                                                (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp  - ENHANCE_TEMP) >
                                                (sFWG2_t.Cyclone_handle_parameter.set_temp - LOCK_RANGE))
                                        {
                                            /* show cyclone handle set temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.set_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.set_temp_f_display);
                                            }
                                        }
                                        else
                                        {
                                            /* change display */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                                            0);
                                            /* change color */
                                            sdwin.send_data(&sdwin, (0x6000 + 0x63), DWIN_DATA_BITS, WHITE_COLOR);

                                            /* show cyclone handle current temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.actual_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                                            }
                                        }
                                    }
                                    else if (sFWG2_t.general_parameter.enhance_state == ENHANCE_CLOSE)
                                    {
                                        if ((sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp) <
                                                (sFWG2_t.Cyclone_handle_parameter.set_temp  + LOCK_RANGE) && \
                                                (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp) >
                                                (sFWG2_t.Cyclone_handle_parameter.set_temp - LOCK_RANGE))
                                        {
                                            /* show cyclone handle set temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.set_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.set_temp_f_display);
                                            }
                                        }
                                        else
                                        {
                                            /* change display */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                                            0);
                                            /* change color */
                                            sdwin.send_data(&sdwin, (0x6000 + 0x63), DWIN_DATA_BITS, WHITE_COLOR);

                                            /* show cyclone handle current temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.actual_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else if (sFWG2_t.Cyclone_handle_work_mode == COLD_WIND_MODE)
                {
                    cyclone_temp_refirsh_time--;

                    if (!cyclone_temp_refirsh_time)
                    {
                        cyclone_temp_refirsh_time = CYCLONE_TEMP_REFIRSH_TIME;

                        /* show cyclone handle current temp */
                        if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                        {
                            if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp - ENHANCE_TEMP));
                            }
                            else
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                                (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp));
                            }
                        }
                        else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_COLOUR), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                        }
                    }
                }
            }
            else if (sFWG2_t.general_parameter.work_mode == CODE)
            {
            }

#endif
            state ++;
            break;

        case 3:
#if 1
            if (sFWG2_t.general_parameter.work_mode == NORMAL)
            {
                if (sFWG2_t.Cyclone_handle_work_mode == NORMAL_MODE || sFWG2_t.Cyclone_handle_work_mode == EN_WORKING_MODE)
                {
                    /* show cyclone handle wind */
                    if (show_cyclone_set_wind_flag == false)
                    {
                        if (sFWG2_t.Cyclone_handle_state == HANDLE_WORKING && sFWG2_t.Cyclone_handle_position == NOT_IN_POSSITION)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_SET_WIND), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_wind);
                        }
                        else if (sFWG2_t.Cyclone_handle_state == HANDLE_WORKING && sFWG2_t.Cyclone_handle_position == IN_POSSITION)
                        {
                            if (sFWG2_t.Cyclone_handle_parameter.actual_temp < 65)
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_SET_WIND), DWIN_DATA_BITS,
                                                sFWG2_t.Cyclone_handle_parameter.set_wind);
                            }
                            else
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_SET_WIND), DWIN_DATA_BITS,
                                                sFWG2_t.Cyclone_handle_parameter.stop_set_wind);
                            }
                        }
                        else  if (sFWG2_t.Cyclone_handle_state == HANDLE_SLEEP)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_SET_WIND), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_wind);
                        }

                        if (first_in == false)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_WIND), DWIN_DATA_BITS,
                                            0);
                            sdwin.send_data(&sdwin, (0x6000 + 0x93), DWIN_DATA_BITS,
                                            WHITE_COLOR);
                        }
                    }

                    if (last_cyclone_handle_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind)
                    {
                        last_cyclone_handle_set_wind = sFWG2_t.Cyclone_handle_parameter.set_wind;

                        if (show_cyclone_set_wind_flag == false)
                        {
                            /* change display */
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_WIND), DWIN_DATA_BITS,
                                            1);
                            /* change color */
                            sdwin.send_data(&sdwin, (0x6000 + 0x93), DWIN_DATA_BITS,
                                            BLUE_COLOR);
                            show_cyclone_set_wind_flag = true;
                        }

                        show_cyclone_set_wind_time = 0;
                        /* show cyclone handle set temp */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_SET_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.Cyclone_handle_parameter.set_wind);
                    }

                    if (show_cyclone_set_wind_flag)
                    {
                        show_cyclone_set_wind_time ++;

                        if (show_cyclone_set_wind_time >= SHOW_CYCLONE_HANDLE_SET_WIND_TIME)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_WIND), DWIN_DATA_BITS,
                                            0);
                            sdwin.send_data(&sdwin, (0x6000 + 0x93), DWIN_DATA_BITS,
                                            WHITE_COLOR);
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_SET_WIND), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_wind);
                            show_cyclone_set_wind_time = 0;
                            show_cyclone_set_wind_flag = false;
                        }
                    }
                }
                else if (sFWG2_t.Cyclone_handle_work_mode == COLD_WIND_MODE)
                {
                    sdwin.send_data(&sdwin, (0x6000 + 0x93), DWIN_DATA_BITS,
                                    BLUE_COLOR);
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_SET_WIND), DWIN_DATA_BITS,
                                    sFWG2_t.Cyclone_handle_parameter.cold_mode_set_wind);
                }
            }
            else if (sFWG2_t.general_parameter.work_mode == CODE)
            {
            }

#endif
            state ++;
            break;

        case 4:
#if 1
            if (sFWG2_t.Cyclone_handle_parameter.actual_wind <= 50)
            {
                /* close cyclone handle's fan flash */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_FAN_GIF_H), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Cyclone_handle_parameter.actual_wind > 50)
            {
                /* show cyclone handle's fan flash */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_FAN_GIF_H), DWIN_DATA_BITS,
                                1);
            }

            if (sFWG2_t.Direct_handle_parameter.actual_wind <= 50)
            {
                /* close direct handle's fan flash */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_FAN_GIF_H), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Direct_handle_parameter.actual_wind > 50)
            {
                /* show direct handle's fan flash */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_FAN_GIF_H), DWIN_DATA_BITS,
                                1);
            }

#endif
            state ++;
            break;

        case 5:
#if 1

            /* show channel select state */
            if (sFWG2_t.general_parameter.ch == 1)
            {
                if (sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time  || \
                        sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Direct_handle_parameter.set_temp  || \
                        sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Direct_handle_parameter.set_wind  || \
                        sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS, 0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 2)
            {
                if (sFWG2_t.general_parameter.ch2_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch2_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 3)
            {
                if (sFWG2_t.general_parameter.ch3_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch3_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 4)
            {
                if (sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }

#endif
            state++;
            break;

        case 6:
#if 1

            /* show handle's work state */
            if (sFWG2_t.Cyclone_handle_state == HANDLE_WORKING)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_WORKING_STATE), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Cyclone_handle_state == HANDLE_SLEEP)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_WORKING_STATE), DWIN_DATA_BITS,
                                1);
            }

            if (sFWG2_t.Direct_handle_state == HANDLE_WORKING)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_WORKING_STATE), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Direct_handle_state == HANDLE_SLEEP)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_WORKING_STATE), DWIN_DATA_BITS,
                                1);
            }

#endif
            state ++;
            break;

        case 7:
#if 1
            if (sFWG2_t.Direct_handle_work_mode == NORMAL_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Direct_handle_work_mode == EN_WORKING_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                1);
            }
            else if (sFWG2_t.Direct_handle_work_mode == COLD_WIND_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                2);
            }

            if (sFWG2_t.Cyclone_handle_work_mode == NORMAL_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Cyclone_handle_work_mode == EN_WORKING_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                1);
            }
            else if (sFWG2_t.Cyclone_handle_work_mode == COLD_WIND_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                2);
            }

            state++;
            break;

        case 8:
            if (sFWG2_t.Direct_handle_error_state != HANDLE_OK || sFWG2_t.Cyclone_handle_error_state != HANDLE_OK)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_ERROR_CODE), DWIN_DATA_BITS,
                                sFWG2_t.Direct_handle_error_state);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_ERROR_CODE), DWIN_DATA_BITS,
                                sFWG2_t.Cyclone_handle_error_state);
            }

#endif
            state = 0;
            break;
        }
    }
    /* clean data */
    else
    {
        direct_temp_refirsh_time = DIRECT_TEMP_REFIRSH_TIME;
        cyclone_temp_refirsh_time = CYCLONE_TEMP_REFIRSH_TIME;
        first_in = false;
        /* direct handle value about */
        last_direct_handle_set_temp = 0;
        last_direct_handle_set_temp_f_display = 0;
        last_direct_handle_current_temp = 0;
        last_direct_handle_current_temp_f_display = 0;
        last_direct_handle_set_wind = 0;
        show_direct_currtne_temp_flag = false;
        show_direct_set_temp_flag = false;
        show_direct_set_wind_flag = false;
        show_direct_set_temp_time = 0;
        show_direct_set_wind_time = 0;
        last_direct_handle_state = HANDLE_SLEEP;
        /* cyclone handle value about */
        last_cyclone_handle_set_temp = 0;
        last_cyclone_handle_set_temp_f_display = 0;
        last_cyclone_handle_current_temp = 0;
        last_cyclone_handle_current_temp_f_display = 0;
        last_cyclone_handle_set_wind = 0;
        show_cyclone_currtne_temp_flag = false;
        show_cyclone_set_temp_flag = false;
        show_cyclone_set_wind_flag = false;
        show_cyclone_set_temp_time = 0;
        show_cyclone_set_wind_time = 0;
    }
}




/*
*   case 0:show cyclone handle's wind value and bar
*   case 1:show cyclone handle's set temp and current temp and bar
*   case 2:show cyclone handle's output value and bar
*   case 3:show cyclone handle's countdown time
*   case 4:show channel's select state
*   case 5:show cyclone handle's work mode
*   case 6:show channel's fan
*   case 7:show cyclone handle's error state
*/
extern float cyclone_handle_pid_out;
void Page_Cyclone_Work_Heartbeat_Packet(void)
{
    static uint8_t state = 0;
    static uint8_t time = 0;
    static uint16_t cyclone_temp_refirsh_time = CYCLONE_TEMP_REFIRSH_TIME;
    static uint16_t last_cyclone_handle_set_temp = 0;
    static uint16_t last_cyclone_handle_set_temp_f_display = 0;
    static uint16_t last_cyclone_handle_current_temp_f_display = 0;
    static uint16_t last_cyclone_handle_current_temp = 0;
    static uint16_t last_cyclone_handle_set_wind = 0;
    static bool show_cyclone_currtne_temp_flag = false;
    static bool show_cyclone_set_temp_flag = false;
    static bool show_cyclone_set_wind_flag = false;
    static uint8_t show_cyclone_set_temp_time = 0;
    static uint16_t show_cyclone_set_wind_time = 0;
    static uint8_t last_cold_mode_set_wind = 0;
    static handle_state_e last_cyclone_handle_state = HANDLE_SLEEP;

    if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_CYCLONE_WORK)
    {
        time++;

        switch (state)
        {
        case 0:
#if 1
            if (sFWG2_t.general_parameter.work_mode == NORMAL && sFWG2_t.Cyclone_handle_work_mode != COLD_WIND_MODE)
            {
                /* show cyclone handle wind */
                if (last_cyclone_handle_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind)
                {
                    last_cyclone_handle_set_wind = sFWG2_t.Cyclone_handle_parameter.set_wind;

                    /* show wind bar begin */
                    if (sFWG2_t.Cyclone_handle_work_mode == NORMAL_MODE)
                    {
                        if (sFWG2_t.Cyclone_handle_state == HANDLE_WORKING && sFWG2_t.Cyclone_handle_position == NOT_IN_POSSITION)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_wind * 0.125);
                        }
                        else if (sFWG2_t.Cyclone_handle_state == HANDLE_WORKING && sFWG2_t.Cyclone_handle_position == IN_POSSITION)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.stop_set_wind * 0.125);
                        }
                        else  if (sFWG2_t.Cyclone_handle_state == HANDLE_SLEEP)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_wind * 0.125);
                        }
                    }

                    /* show wind bar end */

                    if (show_cyclone_set_wind_flag == false)
                    {
                        /* change display */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_WIND), DWIN_DATA_BITS,
                                        1);
                        /* change color */
                        sdwin.send_data(&sdwin, (0x6100 + 0x53), DWIN_DATA_BITS,
                                        BLUE_COLOR);
                        show_cyclone_set_wind_flag = true;
                    }

                    show_cyclone_set_wind_time = 0;
                    /* show cyclone handle set temp */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_WIND), DWIN_DATA_BITS,
                                    sFWG2_t.Cyclone_handle_parameter.set_wind);
                }

                if (show_cyclone_set_wind_flag)
                {
                    show_cyclone_set_wind_time ++;

                    if (show_cyclone_set_wind_time >= SHOW_CYCLONE_HANDLE_SET_WIND_TIME)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_WIND), DWIN_DATA_BITS,
                                        0);
                        sdwin.send_data(&sdwin, (0x6100 + 0x53), DWIN_DATA_BITS,
                                        WHITE_COLOR);
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.Cyclone_handle_parameter.set_wind);
                        show_cyclone_set_wind_time = 0;
                        show_cyclone_set_wind_flag = false;
                    }
                }

                /* refresh set wind */
                last_cold_mode_set_wind = 0;
            }
            else if (sFWG2_t.Cyclone_handle_work_mode == COLD_WIND_MODE)
            {
                if (last_cold_mode_set_wind != sFWG2_t.Cyclone_handle_parameter.cold_mode_set_wind)
                {
                    last_cold_mode_set_wind = sFWG2_t.Cyclone_handle_parameter.cold_mode_set_wind;
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_WIND), DWIN_DATA_BITS,
                                    1);
                    sdwin.send_data(&sdwin, (0x6100 + 0x53), DWIN_DATA_BITS,
                                    BLUE_COLOR);
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_WIND), DWIN_DATA_BITS,
                                    sFWG2_t.Cyclone_handle_parameter.cold_mode_set_wind);
                }

                /* refresh set wind */
                last_cyclone_handle_set_wind = 0;
            }

#endif
            state++;
            break;

        case 1:
#if 1
            if (sFWG2_t.general_parameter.work_mode == NORMAL)
            {
                if (sFWG2_t.Cyclone_handle_work_mode == NORMAL_MODE  || sFWG2_t.Cyclone_handle_work_mode == EN_WORKING_MODE)
                {
                    /* show cyclone handle set temp */
                    if ((last_cyclone_handle_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp) || \
                            last_cyclone_handle_set_temp_f_display != sFWG2_t.Cyclone_handle_parameter.set_temp_f_display)
                    {
                        last_cyclone_handle_set_temp = sFWG2_t.Cyclone_handle_parameter.set_temp;
                        last_cyclone_handle_set_temp_f_display = sFWG2_t.Cyclone_handle_parameter.set_temp_f_display;

                        if (show_cyclone_set_temp_flag == false)
                        {
                            /* change display */
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                            1);
                            /* change color */
                            sdwin.send_data(&sdwin, 0x6123, DWIN_DATA_BITS,
                                            ORANGE_COLOR);
                            show_cyclone_set_temp_flag = true;
                        }

                        show_cyclone_set_temp_time = 0;

                        /* show cyclone handle set temp */
                        if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_temp);
                        }
                        else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.set_temp_f_display);
                        }
                    }

                    if (show_cyclone_set_temp_flag)
                    {
                        show_cyclone_set_temp_time ++;

                        if (show_cyclone_set_temp_time >= SHOW_CYCLONE_HANDLE_SET_TEMP_TIME)
                        {
                            show_cyclone_set_temp_time = 0;
                            show_cyclone_set_temp_flag = false;
                        }
                    }
                    /* show cyclone handle current temp */
                    else
                    {
                        cyclone_temp_refirsh_time --;

                        if (!cyclone_temp_refirsh_time)
                        {
                            cyclone_temp_refirsh_time = CYCLONE_TEMP_REFIRSH_TIME;

                            if (last_cyclone_handle_current_temp != sFWG2_t.Cyclone_handle_parameter.actual_temp || \
                                    last_cyclone_handle_current_temp_f_display != sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display)
                            {
                                last_cyclone_handle_current_temp = sFWG2_t.Cyclone_handle_parameter.actual_temp;
                                last_cyclone_handle_current_temp_f_display = sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display;

                                if (sFWG2_t.general_parameter.display_lock_state == UNLOCK)
                                {
                                    /* change display */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                                    0);
                                    /* change color */
                                    sdwin.send_data(&sdwin, 0x6123, DWIN_DATA_BITS, WHITE_COLOR);
                                    /* show cyclone handle current temp bar */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                                    sFWG2_t.Cyclone_handle_parameter.actual_temp * 0.05);

                                    /* show cyclone handle current temp */
                                    if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                    {
                                        if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                                        {
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                            (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp - ENHANCE_TEMP));
                                        }
                                        else
                                        {
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                            (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp));
                                        }
                                    }
                                    else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                    {
                                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                        sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                                    }
                                }
                                else if (sFWG2_t.general_parameter.display_lock_state == LOCK)
                                {
                                    /* change display */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                                    0);
                                    /* change color */
                                    sdwin.send_data(&sdwin, 0x6123, DWIN_DATA_BITS, WHITE_COLOR);

                                    if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                                    {
                                        if ((sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp -
                                                ENHANCE_TEMP) <
                                                (sFWG2_t.Cyclone_handle_parameter.set_temp  + LOCK_RANGE) && \
                                                (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp  - ENHANCE_TEMP) >
                                                (sFWG2_t.Cyclone_handle_parameter.set_temp - LOCK_RANGE))
                                        {
                                            /* show cyclone handle set temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.set_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.set_temp_f_display);
                                            }

                                            /* show cyclone handle current temp bar */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                                            sFWG2_t.Cyclone_handle_parameter.set_temp * 0.05);
                                        }
                                        else
                                        {
                                            /* change display */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                                            0);
                                            /* change color */
                                            sdwin.send_data(&sdwin, 0x6123, DWIN_DATA_BITS, WHITE_COLOR);
                                            /* show cyclone handle current temp bar */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                                            sFWG2_t.Cyclone_handle_parameter.actual_temp * 0.05);

                                            /* show cyclone handle current temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.actual_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                                            }
                                        }
                                    }
                                    else if (sFWG2_t.general_parameter.enhance_state == ENHANCE_CLOSE)
                                    {
                                        if ((sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp) <
                                                (sFWG2_t.Cyclone_handle_parameter.set_temp  + LOCK_RANGE) && \
                                                (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp) >
                                                (sFWG2_t.Cyclone_handle_parameter.set_temp - LOCK_RANGE))
                                        {
                                            /* show cyclone handle set temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.set_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.set_temp_f_display);
                                            }
                                        }
                                        else
                                        {
                                            /* change display */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TEMP), DWIN_DATA_BITS,
                                                            0);
                                            /* change color */
                                            sdwin.send_data(&sdwin, 0x6123, DWIN_DATA_BITS, WHITE_COLOR);
                                            /* show cyclone handle current temp bar */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                                            sFWG2_t.Cyclone_handle_parameter.actual_temp * 0.05);

                                            /* show cyclone handle current temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.actual_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else if (sFWG2_t.Cyclone_handle_work_mode == COLD_WIND_MODE)
                {
                    cyclone_temp_refirsh_time--;

                    if (!cyclone_temp_refirsh_time)
                    {
                        cyclone_temp_refirsh_time = CYCLONE_TEMP_REFIRSH_TIME;
                        /* show cyclone handle current temp bar */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                        sFWG2_t.Cyclone_handle_parameter.actual_temp * 0.05);

                        /* show cyclone handle current temp */
                        if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                        {
                            if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp - ENHANCE_TEMP));
                            }
                            else
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                                (sFWG2_t.Cyclone_handle_parameter.actual_temp - sFWG2_t.Cyclone_handle_parameter.set_calibration_temp));
                            }
                        }
                        else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP), DWIN_DATA_BITS,
                                            sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                        }
                    }
                }
            }
            else if (sFWG2_t.general_parameter.work_mode == CODE)
            {
            }

#endif
            state ++;
            break;

        case 2:
#if 1

            /* show channel select state */
            if (sFWG2_t.general_parameter.ch == 1)
            {
                if (sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time  || \
                        sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp  || \
                        sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind  || \
                        sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS, 0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 2)
            {
                if (sFWG2_t.general_parameter.ch2_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch2_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 3)
            {
                if (sFWG2_t.general_parameter.ch3_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch3_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 4)
            {
                if (sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }

#endif
            state ++;
            break;

        case 3:
#if 1
            if (time % CYCLONE_TEMP_REFIRSH_TIME == 0)
            {
                /* show cyclone handle's outpot value */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TPME_OUTPUT_POWER), DWIN_DATA_BITS,
                                (cyclone_handle_pid_out / 599));
                /* show cyclone handle's outpot bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_TPME_OUTPUT_POWER_BAR), DWIN_DATA_BITS,
                                (cyclone_handle_pid_out / 599) * 0.25);
            }

#endif
            state++;
            break;

        case 4:
#if 1

            /* show countdown time */
            if (sFWG2_t.general_parameter.countdown_flag == true)
            {
                sdwin.send_data(&sdwin, (0x6183), DWIN_DATA_BITS,
                                RED_COLOR);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_COUNTDOWN), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.countdown_time_display);
            }
            else
            {
                sdwin.send_data(&sdwin, (0x6183), DWIN_DATA_BITS,
                                WHITE_COLOR);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_COUNTDOWN), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.countdown_time);
            }

#endif
            state ++;
            break;

        case 5:
#if 1
            if (sFWG2_t.Direct_handle_work_mode == NORMAL_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Direct_handle_work_mode == EN_WORKING_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                1);
            }
            else if (sFWG2_t.Direct_handle_work_mode == COLD_WIND_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                2);
            }

            if (sFWG2_t.Cyclone_handle_work_mode == NORMAL_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Cyclone_handle_work_mode == EN_WORKING_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                1);
            }
            else if (sFWG2_t.Cyclone_handle_work_mode == COLD_WIND_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                2);
            }

#endif
            state++;
            break;

        case 6:
            if (sFWG2_t.Cyclone_handle_parameter.actual_wind <= 50)
            {
                /* close cyclone handle's fan flash */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_FAN_GIF_H), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Cyclone_handle_parameter.actual_wind > 50)
            {
                /* show cyclone handle's fan flash */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_FAN_GIF_H), DWIN_DATA_BITS,
                                1);
            }

            state++;
            break;

        case 7:
            if (sFWG2_t.Cyclone_handle_error_state != HANDLE_OK)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_ERROR_CODE), DWIN_DATA_BITS,
                                sFWG2_t.Cyclone_handle_error_state);
            }

            state = 0;
            break;
        }
    }
    /* clean data */
    else
    {
        time = 0;
        cyclone_temp_refirsh_time = CYCLONE_TEMP_REFIRSH_TIME;
        last_cyclone_handle_set_temp = 0;
        last_cyclone_handle_set_temp_f_display = 0;
        last_cyclone_handle_current_temp_f_display = 0;
        last_cyclone_handle_current_temp = 0;
        last_cyclone_handle_set_wind = 0;
        show_cyclone_currtne_temp_flag = false;
        show_cyclone_set_temp_flag = false;
        show_cyclone_set_wind_flag = false;
        show_cyclone_set_temp_time = 0;
        show_cyclone_set_wind_time = 0;
        last_cold_mode_set_wind = 0;
        last_cyclone_handle_state = HANDLE_SLEEP;
    }
}

/*
*   case 0:show direct handle's wind value and bar
*   case 1:show direct handle's set temp and current temp and bar
*   case 2:show direct handle's outpot value and bar
*   case 3:show direct handle's countdown time
*   case 4:show channel's select state
*   case 5:show direct handle's work mode
*   case 6:show direct handle's fan
*   case 7:show direct error state
*/
extern float direct_handle_pid_out;
void Page_Direct_Work_Heartbeat_Packet(void)
{
    static uint8_t state = 0;
    static uint8_t time = 0;
    static uint8_t direct_temp_refirsh_time = DIRECT_TEMP_REFIRSH_TIME;
    static uint16_t last_direct_handle_set_temp = 0;
    static uint16_t last_direct_handle_set_temp_f_display = 0;
    static uint16_t last_direct_handle_current_temp_f_display = 0;
    static uint16_t last_direct_handle_current_temp = 0;
    static uint16_t last_direct_handle_set_wind = 0;
    static bool show_direct_currtne_temp_flag = false;
    static bool show_direct_set_temp_flag = false;
    static bool show_direct_set_wind_flag = false;
    static uint8_t show_direct_set_temp_time = 0;
    static uint16_t show_direct_set_wind_time = 0;
    static uint8_t last_cold_mode_set_wind = 0;
    static handle_state_e last_direct_handle_state = HANDLE_SLEEP;

    if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_DIRECT_WORK)
    {
        time++;

        switch (state)
        {
        case 0:
#if 1
            if (sFWG2_t.general_parameter.work_mode == NORMAL && sFWG2_t.Direct_handle_work_mode != COLD_WIND_MODE)
            {
                /* show direct handle wind */
                if (last_direct_handle_set_wind != sFWG2_t.Direct_handle_parameter.set_wind)
                {
                    last_direct_handle_set_wind = sFWG2_t.Direct_handle_parameter.set_wind;

                    /* show wind bar begin */
                    if (sFWG2_t.Direct_handle_work_mode == NORMAL_MODE)
                    {
                        if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && sFWG2_t.Direct_handle_position == NOT_IN_POSSITION)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_wind * 0.125);
                        }
                        else if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && sFWG2_t.Direct_handle_position == IN_POSSITION)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.stop_set_wind * 0.125);
                        }
                        else  if (sFWG2_t.Direct_handle_state == HANDLE_SLEEP)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_wind * 0.125);
                        }
                    }

                    /* show wind bar end */
                    if (show_direct_set_wind_flag == false)
                    {
                        /* change display */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_WIND), DWIN_DATA_BITS,
                                        1);
                        /* change color */
                        sdwin.send_data(&sdwin, (0x6000 + 0xf3), DWIN_DATA_BITS,
                                        BLUE_COLOR);
                        show_direct_set_wind_flag = true;
                    }

                    /* show direct handle set temp */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND), DWIN_DATA_BITS,
                                    sFWG2_t.Direct_handle_parameter.set_wind);
                    show_direct_set_wind_time = 0;
                }

                if (show_direct_set_wind_flag)
                {
                    show_direct_set_wind_time ++;

                    if (show_direct_set_wind_time >= SHOW_DIRECT_HANDLE_SET_WIND_TIME)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_WIND), DWIN_DATA_BITS,
                                        0);
                        sdwin.send_data(&sdwin, (0x6000 + 0xf3), DWIN_DATA_BITS,
                                        WHITE_COLOR);
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.Direct_handle_parameter.set_wind);
                        show_direct_set_wind_time = 0;
                        show_direct_set_wind_flag = false;
                    }
                }

                /* refresh set wind */
                last_cold_mode_set_wind = 0;
            }
            else if (sFWG2_t.Direct_handle_work_mode == COLD_WIND_MODE)
            {
                if (last_cold_mode_set_wind != sFWG2_t.Direct_handle_parameter.cold_mode_set_wind)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_WIND), DWIN_DATA_BITS,
                                    1);
                    sdwin.send_data(&sdwin, (0x6000 + 0xf3), DWIN_DATA_BITS,
                                    BLUE_COLOR);
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND), DWIN_DATA_BITS,
                                    sFWG2_t.Direct_handle_parameter.cold_mode_set_wind);
                }

                /* refresh set wind */
                last_direct_handle_set_wind = 0;
            }

#endif
            state++;
            break;

        case 1:
#if 1
            if (sFWG2_t.general_parameter.work_mode == NORMAL)
            {
                if (sFWG2_t.Direct_handle_work_mode == NORMAL_MODE  || sFWG2_t.Direct_handle_work_mode == EN_WORKING_MODE)
                {
                    /* show direct handle set temp */
                    if ((last_direct_handle_set_temp != sFWG2_t.Direct_handle_parameter.set_temp) || \
                            last_direct_handle_set_temp_f_display != sFWG2_t.Direct_handle_parameter.set_temp_f_display)
                    {
                        last_direct_handle_set_temp = sFWG2_t.Direct_handle_parameter.set_temp;
                        last_direct_handle_set_temp_f_display = sFWG2_t.Direct_handle_parameter.set_temp_f_display;

                        if (show_direct_set_temp_flag == false)
                        {
                            /* change display */
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                            1);
                            /* change color */
                            sdwin.send_data(&sdwin, (0x6000 + 0xC3), DWIN_DATA_BITS,
                                            ORANGE_COLOR);
                            show_direct_set_temp_flag = true;
                        }

                        show_direct_set_temp_time = 0;

                        /* show direct handle set temp */
                        if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_temp);
                        }
                        else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.set_temp_f_display);
                        }
                    }

                    if (show_direct_set_temp_flag)
                    {
                        show_direct_set_temp_time ++;

                        if (show_direct_set_temp_time >= SHOW_DIRECT_HANDLE_SET_TEMP_TIME)
                        {
                            show_direct_set_temp_time = 0;
                            show_direct_set_temp_flag = false;
                        }
                    }
                    /* show direct handle current temp */
                    else
                    {
                        direct_temp_refirsh_time --;

                        if (!direct_temp_refirsh_time)
                        {
                            direct_temp_refirsh_time = DIRECT_TEMP_REFIRSH_TIME;

                            if (last_direct_handle_current_temp != sFWG2_t.Direct_handle_parameter.actual_temp || \
                                    last_direct_handle_current_temp_f_display != sFWG2_t.Direct_handle_parameter.actual_temp_f_display)
                            {
                                last_direct_handle_current_temp = sFWG2_t.Direct_handle_parameter.actual_temp;
                                last_direct_handle_current_temp_f_display = sFWG2_t.Direct_handle_parameter.actual_temp_f_display;

                                if (sFWG2_t.general_parameter.display_lock_state == UNLOCK)
                                {
                                    /* change display */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                                    0);
                                    /* change color */
                                    sdwin.send_data(&sdwin, (0x6000 + 0xC3), DWIN_DATA_BITS, WHITE_COLOR);
                                    /* show direct handle current temp bar */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                                    sFWG2_t.Direct_handle_parameter.actual_temp * 0.05);

                                    /* show direct handle current temp */
                                    if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                    {
                                        if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                                        {
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                            (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp - ENHANCE_TEMP));
                                        }
                                        else
                                        {
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                            (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp));
                                        }
                                    }
                                    else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                    {
                                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                        sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                                    }
                                }
                                else if (sFWG2_t.general_parameter.display_lock_state == LOCK)
                                {
                                    /* change display */
                                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                                    0);
                                    /* change color */
                                    sdwin.send_data(&sdwin, (0x6000 + 0xC3), DWIN_DATA_BITS, WHITE_COLOR);

                                    if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                                    {
                                        if ((sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp - ENHANCE_TEMP)
                                                <
                                                (sFWG2_t.Direct_handle_parameter.set_temp  + LOCK_RANGE) && \
                                                (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp  - ENHANCE_TEMP) >
                                                (sFWG2_t.Direct_handle_parameter.set_temp - LOCK_RANGE))
                                        {
                                            /* show direct handle set temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.set_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.set_temp_f_display);
                                            }

                                            /* show direct handle current temp bar */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                                            sFWG2_t.Direct_handle_parameter.set_temp * 0.05);
                                        }
                                        else
                                        {
                                            /* change display */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                                            0);
                                            /* change color */
                                            sdwin.send_data(&sdwin, (0x6000 + 0xC3), DWIN_DATA_BITS, WHITE_COLOR);

                                            /* show direct handle current temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.actual_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                                            }
                                        }
                                    }
                                    else if (sFWG2_t.general_parameter.enhance_state == ENHANCE_CLOSE)
                                    {
                                        if ((sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp) <
                                                (sFWG2_t.Direct_handle_parameter.set_temp  + LOCK_RANGE) && \
                                                (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp) >
                                                (sFWG2_t.Direct_handle_parameter.set_temp - LOCK_RANGE))
                                        {
                                            /* show direct handle set temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.set_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.set_temp_f_display);
                                            }
                                        }
                                        else
                                        {
                                            /* change display */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TEMP), DWIN_DATA_BITS,
                                                            0);
                                            /* change color */
                                            sdwin.send_data(&sdwin, (0x6000 + 0xC3), DWIN_DATA_BITS, WHITE_COLOR);
                                            /* show direct handle current temp bar */
                                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                                            sFWG2_t.Direct_handle_parameter.actual_temp * 0.05);

                                            /* show direct handle current temp */
                                            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.actual_temp);
                                            }
                                            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                                            {
                                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                                sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else if (sFWG2_t.Direct_handle_work_mode == COLD_WIND_MODE)
                {
                    direct_temp_refirsh_time--;

                    if (!direct_temp_refirsh_time)
                    {
                        direct_temp_refirsh_time = DIRECT_TEMP_REFIRSH_TIME;

                        /* show direct handle current temp */
                        if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                        {
                            if (sFWG2_t.general_parameter.enhance_state == ENHANCE_OPEN)
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp - ENHANCE_TEMP));
                            }
                            else
                            {
                                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                                (sFWG2_t.Direct_handle_parameter.actual_temp - sFWG2_t.Direct_handle_parameter.set_calibration_temp));
                            }
                        }
                        else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                        {
                            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP), DWIN_DATA_BITS,
                                            sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                        }
                    }
                }
            }
            else if (sFWG2_t.general_parameter.work_mode == CODE)
            {
            }

#endif
            state ++;
            break;

        case 2:
#if 1

            /* show channel select state */
            if (sFWG2_t.general_parameter.ch == 1)
            {
                if (sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time  || \
                        sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Direct_handle_parameter.set_temp  || \
                        sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Direct_handle_parameter.set_wind  || \
                        sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS, 0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 2)
            {
                if (sFWG2_t.general_parameter.ch2_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch2_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 3)
            {
                if (sFWG2_t.general_parameter.ch3_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch3_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }
            else if (sFWG2_t.general_parameter.ch == 4)
            {
                if (sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time || \
                        sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time)
                {
                    /* show not select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    0);
                }
                else
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.ch);
                }
            }

#endif
            state ++;
            break;

        case 3:
#if 1
            if (time % DIRECT_TEMP_REFIRSH_TIME == 0)
            {
                /* show direct handle's outpot value */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TPME_OUTPUT_POWER), DWIN_DATA_BITS,
                                (direct_handle_pid_out / 599));
                /* show direct handle's outpot bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_TPME_OUTPUT_POWER_BAR), DWIN_DATA_BITS,
                                (direct_handle_pid_out / 599) * 0.25);
            }

#endif
            state++;
            break;

        case 4:
#if 1

            /* show countdown time */
            if (sFWG2_t.general_parameter.countdown_flag == true)
            {
                sdwin.send_data(&sdwin, (0x6183), DWIN_DATA_BITS,
                                RED_COLOR);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_COUNTDOWN), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.countdown_time_display);
            }
            else
            {
                sdwin.send_data(&sdwin, (0x6183), DWIN_DATA_BITS,
                                WHITE_COLOR);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_COUNTDOWN), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.countdown_time);
            }

#endif
            state++;
            break;

        case 5:
#if 1
            if (sFWG2_t.Direct_handle_work_mode == NORMAL_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Direct_handle_work_mode == EN_WORKING_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                1);
            }
            else if (sFWG2_t.Direct_handle_work_mode == COLD_WIND_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_HANDLE_MODE), DWIN_DATA_BITS,
                                2);
            }

            if (sFWG2_t.Cyclone_handle_work_mode == NORMAL_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Cyclone_handle_work_mode == EN_WORKING_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                1);
            }
            else if (sFWG2_t.Cyclone_handle_work_mode == COLD_WIND_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_HANDLE_MODE), DWIN_DATA_BITS,
                                2);
            }

#endif
            state++;
            break;

        case 6:
            if (sFWG2_t.Direct_handle_parameter.actual_wind <= 50)
            {
                /* close direct handle's fan flash */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_FAN_GIF_H), DWIN_DATA_BITS,
                                0);
            }
            else if (sFWG2_t.Direct_handle_parameter.actual_wind > 50)
            {
                /* show direct handle's fan flash */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_FAN_GIF_H), DWIN_DATA_BITS,
                                1);
            }

            state ++;
            break;

        case 7:
            if (sFWG2_t.Direct_handle_error_state != HANDLE_OK)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_ERROR_CODE), DWIN_DATA_BITS,
                                sFWG2_t.Direct_handle_error_state);
            }

            state = 0;
            break;
        }
    }
    /* clean data */
    else
    {
        time = 0;
        direct_temp_refirsh_time = DIRECT_TEMP_REFIRSH_TIME;
        last_direct_handle_set_temp = 0;
        last_direct_handle_set_temp_f_display = 0;
        last_direct_handle_current_temp_f_display = 0;
        last_direct_handle_current_temp = 0;
        last_direct_handle_set_wind = 0;
        show_direct_currtne_temp_flag = false;
        show_direct_set_temp_flag = false;
        show_direct_set_wind_flag = false;
        show_direct_set_temp_time = 0;
        show_direct_set_wind_time = 0;
        last_cold_mode_set_wind = 0;
        last_direct_handle_state = HANDLE_SLEEP;
    }
}

/*
*   case 0:show channel's select state
*   case 1:show channel 1 value
*   case 2:show channel 2 value
*   case 3:show channel 3 value
*   case 4:show channel 4 value
*   case 5:show speaker state
*   case 6:show enhance mode set val
*   case 7:show code mode pre set val
*   case 8:show code mode code1 set val
*   case 9:show code mode code2 set val
*   case 10:show enhance mode set value
*   case 11:show countdown time set val
*   case 12:show temp unit time select state
*   case 13:
*/
void Page_General_Heartbeat_Packet(void)
{
    static uint8_t state = 0;
    static fwg2_speaker_state_e last_speaker_state = SPEAKER_CLOSE;
    static fwg2_page_e last_page = 0xff;

    if (last_page != sFWG2_t.general_parameter.fwg2_page || sFWG2_t.general_parameter.fwg2_page == PAGE_SET_WORK_MODE
            || sFWG2_t.general_parameter.fwg2_page ==  PAGE_SET_CODE_MODE)
    {
        switch (state)
        {
        case 0:
#if 1

            /* show channel select state */
            if (sFWG2_t.general_parameter.fwg2_page == PAGE_MAIN)
            {
                if (sFWG2_t.general_parameter.ch == 1)
                {
                    if (sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time  || \
                            sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Direct_handle_parameter.set_temp  || \
                            sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Direct_handle_parameter.set_wind  || \
                            sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS, 0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 2)
                {
                    if (sFWG2_t.general_parameter.ch2_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time || \
                            sFWG2_t.general_parameter.ch2_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 3)
                {
                    if (sFWG2_t.general_parameter.ch3_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time || \
                            sFWG2_t.general_parameter.ch3_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 4)
                {
                    if (sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time || \
                            sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
            }
            else if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_DIRECT_WORK)
            {
                if (sFWG2_t.general_parameter.ch == 1)
                {
                    if (
                        sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Direct_handle_parameter.set_temp  || \
                        sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Direct_handle_parameter.set_wind  || \
                        sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS, 0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 2)
                {
                    if (sFWG2_t.general_parameter.ch2_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 3)
                {
                    if (
                        sFWG2_t.general_parameter.ch3_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 4)
                {
                    if (
                        sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Direct_handle_parameter.set_temp || \
                        sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Direct_handle_parameter.set_wind || \
                        sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
            }
            else if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_CYCLONE_WORK)
            {
                if (sFWG2_t.general_parameter.ch == 1)
                {
                    if (sFWG2_t.general_parameter.ch1_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch1_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch1_set_time != sFWG2_t.general_parameter.countdown_time
                       )
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS, 0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 2)
                {
                    if (sFWG2_t.general_parameter.ch2_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch2_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch2_set_time != sFWG2_t.general_parameter.countdown_time
                       )
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 3)
                {
                    if (sFWG2_t.general_parameter.ch3_set_temp     != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch3_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch3_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
                else if (sFWG2_t.general_parameter.ch == 4)
                {
                    if (sFWG2_t.general_parameter.ch4_set_temp != sFWG2_t.Cyclone_handle_parameter.set_temp || \
                            sFWG2_t.general_parameter.ch4_set_wind != sFWG2_t.Cyclone_handle_parameter.set_wind || \
                            sFWG2_t.general_parameter.ch4_set_time != sFWG2_t.general_parameter.countdown_time)
                    {
                        /* show not select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        0);
                    }
                    else
                    {
                        /* show select channel */
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CHANNEL), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.ch);
                    }
                }
            }

#endif
            state ++;
            break;

        case 1:
#if 1
            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
            {
                /* show ch1 set val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH1_SET_TEMP), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.ch1_set_temp);//lost data
            }
            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
            {
                /* show ch1 set val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH1_SET_TEMP), DWIN_DATA_BITS,
                                9 * sFWG2_t.general_parameter.ch1_set_temp / 5 + 32); //lost data
            }

            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH1_SET_WIND), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ch1_set_wind);
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH1_SET_TIME), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ch1_set_time);
#endif
            state++;
            break;

        case 2:
#if 1
            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
            {
                /* show ch2 set val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH2_SET_TEMP), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.ch2_set_temp);
            }
            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
            {
                /* show ch2 set val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH2_SET_TEMP), DWIN_DATA_BITS,
                                9 * sFWG2_t.general_parameter.ch2_set_temp / 5 + 32);
            }

            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH2_SET_WIND), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ch2_set_wind);
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH2_SET_TIME), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ch2_set_time);
#endif
            state++;
            break;

        case 3:
#if 1
            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
            {
                /* show ch3 set val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH3_SET_TEMP), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.ch3_set_temp);
            }
            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
            {
                /* show ch3 set val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH3_SET_TEMP), DWIN_DATA_BITS,
                                9 * sFWG2_t.general_parameter.ch3_set_temp / 5 + 32);
            }

            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH3_SET_WIND), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ch3_set_wind);
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH3_SET_TIME), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ch3_set_time);
#endif
            state++;
            break;

        case 4:
#if 1
            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
            {
                /* show ch4 set val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH4_SET_TEMP), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.ch4_set_temp);//lost data
            }
            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
            {
                /* show ch4 set val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH4_SET_TEMP), DWIN_DATA_BITS,
                                9 * sFWG2_t.general_parameter.ch4_set_temp / 5 + 32); //lost data
            }

            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH4_SET_WIND), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ch4_set_wind);
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH4_SET_TIME), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ch4_set_time);
#endif
            state++;
            break;

        case 5:
#if 1
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_SPEAKER_FUNCTION), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.speak_state);
#endif
            state++;
            break;

        case 6:
            if (sFWG2_t.general_parameter.code_ch == 0)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code0_pre_temp);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TEMP), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code0_pre_temp / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_WIND), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code0_pre_wind);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TIME), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code0_pre_time);
            }

            if (sFWG2_t.general_parameter.code_ch == 1)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code1_pre_temp);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TEMP), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code1_pre_temp / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_WIND), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code1_pre_wind);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TIME), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code1_pre_time);
            }

            if (sFWG2_t.general_parameter.code_ch == 2)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code2_pre_temp);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TEMP), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code2_pre_temp / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_WIND), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code2_pre_wind);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TIME), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code2_pre_time);
            }

            if (sFWG2_t.general_parameter.code_ch == 3)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code3_pre_temp);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TEMP), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code3_pre_temp / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_WIND), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code3_pre_wind);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_PRE_TIME), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code3_pre_time);
            }

            state++;
            break;

        case 7:
            if (sFWG2_t.general_parameter.code_ch == 0)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP1), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code0_temp_1);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP1), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code0_temp_1 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND1), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code0_wind_1);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME1), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code0_time_1);
            }
            else if (sFWG2_t.general_parameter.code_ch == 1)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP1), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code1_temp_1);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP1), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code1_temp_1 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND1), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code1_wind_1);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME1), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code1_time_1);
            }
            else if (sFWG2_t.general_parameter.code_ch == 2)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP1), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code2_temp_1);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP1), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code2_temp_1 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND1), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code2_wind_1);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME1), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code2_time_1);
            }
            else if (sFWG2_t.general_parameter.code_ch == 3)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP1), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code3_temp_1);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP1), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code3_temp_1 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND1), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code3_wind_1);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME1), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code3_time_1);
            }

            state++;
            break;

        case 8:
            if (sFWG2_t.general_parameter.code_ch == 0)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP2), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code0_temp_2);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP2), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code0_temp_2 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND2), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code0_wind_2);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME2), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code0_time_2);
            }
            else if (sFWG2_t.general_parameter.code_ch == 1)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP2), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code1_temp_2);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP2), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code1_temp_2 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND2), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code1_wind_2);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME2), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code1_time_2);
            }
            else if (sFWG2_t.general_parameter.code_ch == 2)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP2), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code2_temp_2);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP2), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code2_temp_2 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND2), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code2_wind_2);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME2), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code2_time_2);
            }
            else if (sFWG2_t.general_parameter.code_ch == 3)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP2), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code3_temp_2);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP2), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code3_temp_2 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND2), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code3_wind_2);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME2), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code3_time_2);
            }

            state++;
            break;

        case 9:
            if (sFWG2_t.general_parameter.code_ch == 0)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP3), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code0_temp_3);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP3), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code0_temp_3 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND3), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code0_wind_3);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME3), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code0_time_3);
            }
            else if (sFWG2_t.general_parameter.code_ch == 1)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP3), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code1_temp_3);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP3), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code1_temp_3 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND3), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code1_wind_3);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME3), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code1_time_3);
            }
            else if (sFWG2_t.general_parameter.code_ch == 2)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP3), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code2_temp_3);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP3), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code2_temp_3 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND3), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code2_wind_3);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME3), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code2_time_3);
            }
            else if (sFWG2_t.general_parameter.code_ch == 3)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP3), DWIN_DATA_BITS,
                                    sFWG2_t.general_parameter.code3_temp_3);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TEMP3), DWIN_DATA_BITS,
                                    9 * sFWG2_t.general_parameter.code3_temp_3 / 5 + 32);
                }

                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_WIND3), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code3_wind_3);
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_WORK_TIME3), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code3_time_3);
            }

            state++;
            break;

        case 10:

            /* show enhance mode set value */
            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_ENHANCE_TEMP), DWIN_DATA_BITS,
                                sFWG2_t.Direct_handle_parameter.quick_work_temp);
            }
            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_ENHANCE_TEMP), DWIN_DATA_BITS,
                                9 * sFWG2_t.Direct_handle_parameter.quick_work_temp / 5 + 32);
            }

            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_ENHANCE_COUNTDOWN_TIME), DWIN_DATA_BITS,
                            sFWG2_t.Direct_handle_parameter.quick_work_time);
            state++;
            break;

        case 11:
            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
            {
                /* lost data,no reason */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH1_SET_TEMP), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.ch1_set_temp);//send again
            }
            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
            {
                /* lost data,no reason */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH1_SET_TEMP), DWIN_DATA_BITS,
                                9 * sFWG2_t.general_parameter.ch1_set_temp / 5 + 32); //send again
            }

            state++;
            break;

        case 12:
            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
            {
                /* lost data,no reason */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH4_SET_TEMP), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.ch4_set_temp);//send again
            }
            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
            {
                /* lost data,no reason */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CH4_SET_TEMP), DWIN_DATA_BITS,
                                9 * sFWG2_t.general_parameter.ch4_set_temp / 5 + 32); //send again
            }

            state++;
            break;

        case 13:
            /* show temp unit select */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_TEMP_UNITS), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.temp_uint);
            state++;
            break;

        case 14:
            if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
            {
                /* show enhance temp val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_ENHANCE_TEMP), DWIN_DATA_BITS,
                                sFWG2_t.Cyclone_handle_parameter.quick_work_temp);
            }
            else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
            {
                /* show enhance temp val */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_ENHANCE_TEMP), DWIN_DATA_BITS,
                                9 * sFWG2_t.Cyclone_handle_parameter.quick_work_temp / 5 + 32);
            }

            last_page =  sFWG2_t.general_parameter.fwg2_page;
            state ++;
            break;

        case 15:
            /* show enhance function state */
            /* show enhance temp val */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + EN_HANCE_FUNCTION), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.enhance_state);
            state = 0;
            break;
        }
    }
}

/*
*   case 0:show work mode select
*   case 1:show temp unit select
*   case 2:show speaker mode select
*   case 3:show display lock mode select
*   case 4:show fn key mode select
*   case 5:show speaker state

*   case 6:show countdown time
*   case 7:show handle touch select
*   case 8:show uart function select
*   case 9:show software version
*   case 10:show ota function select

*   case 11:show pre set val
*   case 12:show step1  set val
*   case 13:show step2  set val
*   case 14:show step3  set val
*   case 15:show en mode set val
*/
void Page_Set_Heartbeat_Packet(void)
{
    static uint8_t state = 0;
    static bool first_in = false;

    if (sFWG2_t.general_parameter.fwg2_page == PAGE_MENU_1 || \
            sFWG2_t.general_parameter.fwg2_page == PAGE_MENU_2)
    {
        switch (state)
        {
        case 0:

            /* show work mode select */
            if (sFWG2_t.general_parameter.work_mode != CODING_MODE)
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + FWG2_WORK_MODE), DWIN_DATA_BITS,
                                0);
            }
            else
            {
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + FWG2_WORK_MODE), DWIN_DATA_BITS,
                                1);
            }

            state ++;
            break;

        case 1:
            /* show temp unit select */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_TEMP_UNITS), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.temp_uint);
            state ++;
            break;

        case 2:
            /* show speaker mode select */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_SPEAKER_FUNCTION), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.speak_state);
            state ++;
            break;

        case 3:
            /* show display lock mode select */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_DISPLAY_LOCK_MODE), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.display_lock_state);
            state ++;
            break;

        case 4:
            /* show fn key mode select */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_FN_KEY_MODE), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.fn_key_set);
            state ++;
            break;

        case 5:
            if (first_in == false)
            {
                first_in = true;

                /* show direct handle set temp */
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_DIRECT_CALIBRATE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.Direct_handle_parameter.set_temp);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_DIRECT_CALIBRATE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.Direct_handle_parameter.set_temp_f_display);
                }

                /* show cyclone handle set temp */
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CYCLONE_CALIBRATE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.Cyclone_handle_parameter.set_temp);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_CYCLONE_CALIBRATE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.Cyclone_handle_parameter.set_temp_f_display);
                }
            }

            state ++;
            break;

        case 6:
            /* show countdown time */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_TIME), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.countdown_time);
            state ++;
            break;

        case 7:
            /* show handle touch select */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_TOUCH_FUNCTION), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.touch_key_set);
            state ++;
            break;

        case 8:
            /* show uart function select */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_UART_FUNCTION), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.uart_state);
            state ++;
            break;

        case 9:
            /* show software version  */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_HARDWARE_VER), DWIN_DATA_BITS,
                            1.0);
            /* show hardware version  */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_SOFTWARE_VER), DWIN_DATA_BITS,
                            1.0);
            state ++;
            break;

        case 10:
            /* show ota function select */
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SET_UART_FUNCTION), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.ota_state);
            state = 0;
            break;
        }
    }
    else
    {
        first_in = false;
    }
}


/*
*   case 0:show direct handle's current temp curve
*   case 1:show direct handle's set wind curve
*   case 2:show direct handle's current temp bar
*   case 3:show direct handle's set wind bar
*/
void Page_Direct_Curve_Heartbeat_Packet(void)
{
    static uint8_t state = 0;
    static uint16_t delay_time = CURVE_REFIRSH_TIME;
    delay_time--;

    if (!delay_time)
    {
        delay_time = CURVE_REFIRSH_TIME;

        if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_DIRECT_CURVE)
        {
            switch (state)
            {
            case 0:
#if 1

                /* send direct handle's temp curve */
                if (sFWG2_t.Direct_handle_parameter.actual_temp >= 256)
                {
                    direct_temp_buff[12] = 1;
                }
                else
                {
                    direct_temp_buff[12] = 0;
                }

                direct_temp_buff[13] = sFWG2_t.Direct_handle_parameter.actual_temp;
                usart_sendData(DWIN_USART, direct_temp_buff, 14);
#endif
                state++;
                break;

            case 1:
#if 1
                if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && sFWG2_t.Direct_handle_position == NOT_IN_POSSITION)
                {
                    /* send direct handle's wind curve */
                    direct_wind_buff[13] = sFWG2_t.Direct_handle_parameter.set_wind;
                    usart_sendData(DWIN_USART, direct_wind_buff, 14);
                }
                else if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && sFWG2_t.Direct_handle_position == IN_POSSITION)
                {
                    if (sFWG2_t.Direct_handle_parameter.actual_temp < 65)
                    {
                        /* send direct handle's wind curve */
                        direct_wind_buff[13] = 0;
                        usart_sendData(DWIN_USART, direct_wind_buff, 14);
                    }
                    else
                    {
                        /* send direct handle's wind curve */
                        direct_wind_buff[13] = sFWG2_t.Direct_handle_parameter.stop_set_wind;
                        usart_sendData(DWIN_USART, direct_wind_buff, 14);
                    }
                }
                else  if (sFWG2_t.Direct_handle_state == HANDLE_SLEEP)
                {
                    /* send direct handle's wind curve */
                        direct_wind_buff[13] = 0;
                        usart_sendData(DWIN_USART, direct_wind_buff, 14);
                }

#endif
                state++;
                break;

            case 2:
#if 1
                /* show direct handle current temp bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                sFWG2_t.Direct_handle_parameter.actual_temp * 0.05);
#endif
                state++;
                break;

            case 3:
#if 1
			
			    if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && sFWG2_t.Direct_handle_position == NOT_IN_POSSITION)
                {
                    /* show direct handle's set wind bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                sFWG2_t.Direct_handle_parameter.set_wind * 0.125);
                }
                else if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && sFWG2_t.Direct_handle_position == IN_POSSITION)
                {
                    if (sFWG2_t.Direct_handle_parameter.actual_temp < 65)
                    {
                        /* show direct handle's set wind bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                0);
                    }
                    else
                    {
                        
						/* show direct handle's set wind bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                sFWG2_t.Direct_handle_parameter.stop_set_wind * 0.125);
                    }
                }
                else  if (sFWG2_t.Direct_handle_state == HANDLE_SLEEP)
                {
                    /* show direct handle's set wind bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_DIRECT_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                0);
                }
                
#endif
                state = 0;
                break;
            }
        }
    }
}

/*
*   case 0:show cyclone handle's current temp curve
*   case 1:show cyclone handle's set wind curve
*   case 2:show cyclone handle's current temp bar
*   case 3:show cyclone handle's set wind bar
*/
void Page_Cyclone_Curve_Heartbeat_Packet(void)
{
    static uint8_t state = 0;
    static uint16_t delay_time = CURVE_REFIRSH_TIME;
    delay_time--;

    if (!delay_time)
    {
        delay_time = CURVE_REFIRSH_TIME;

        if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_CYCLONE_CURVE)
        {
            switch (state)
            {
            case 0:
#if 1

                /* send cyclone handle's temp curve */
                if (sFWG2_t.Cyclone_handle_parameter.actual_temp >= 256)
                {
                    cyclone_temp_buff[12] = 1;
                }
                else
                {
                    cyclone_temp_buff[12]  = 0;
                }

                cyclone_temp_buff[13] = sFWG2_t.Cyclone_handle_parameter.actual_temp;
                usart_sendData(DWIN_USART, cyclone_temp_buff, 14);
#endif
                state++;
                break;

            case 1:
#if 1
                /* send cyclone handle's wind curve */
                cyclone_wind_buff[13] = sFWG2_t.Cyclone_handle_parameter.set_wind;
                usart_sendData(DWIN_USART, cyclone_wind_buff, 14);
#endif
                state++;
                break;

            case 2:
#if 1
                /* show cyclone handle's current temp bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_TEMP_BAR), DWIN_DATA_BITS,
                                sFWG2_t.Cyclone_handle_parameter.actual_temp * 0.05);
#endif
                state++;
                break;

            case 3:
#if 1
                /* show cyclone handle's set wind bar */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CYCLONE_CURRENT_WIND_BAR), DWIN_DATA_BITS,
                                sFWG2_t.Cyclone_handle_parameter.set_wind * 0.125);
#endif
                state = 0;
                break;
            }
        }
    }
}




/*
*   case 0:show cyclone handle's current temp curve
*   case 1:show cyclone handle's set wind curve
*   case 2:show cyclone handle's current temp bar
*   case 3:show cyclone handle's set wind bar
*/
void Page_ALL_Curve_Heartbeat_Packet(void)
{
    static uint8_t state = 0;
    static uint16_t delay_time = CURVE_REFIRSH_TIME;
    delay_time--;

    if (!delay_time)
    {
        delay_time = CURVE_REFIRSH_TIME;

        if (sFWG2_t.general_parameter.fwg2_page == PAGE_DIRECT_CYCLONE_CURVE)
        {
            switch (state)
            {
            case 0:
#if 1

                /* send cyclone handle's temp curve */
                if (sFWG2_t.Cyclone_handle_parameter.actual_temp >= 256)
                {
                    cyclone_temp_buff[12] = 1;
                }
                else
                {
                    cyclone_temp_buff[12] = 0;
                }

                cyclone_temp_buff[13] = sFWG2_t.Cyclone_handle_parameter.actual_temp;
                usart_sendData(DWIN_USART, cyclone_temp_buff, 14);
#endif
                state++;
                break;

            case 1:
#if 1
                /* send cyclone handle's wind curve */
                cyclone_wind_buff[13] = sFWG2_t.Cyclone_handle_parameter.set_wind;
                usart_sendData(DWIN_USART, cyclone_wind_buff, 14);
#endif
                state ++;
                break;

            case 2:
#if 1

                /* send direct handle's temp curve */
                if (sFWG2_t.Direct_handle_parameter.actual_temp >= 256)
                {
                    direct_temp_buff[12] = 1;
                }
                else
                {
                    direct_temp_buff[12] = 0;
                }

                direct_temp_buff[13] = sFWG2_t.Direct_handle_parameter.actual_temp;
                usart_sendData(DWIN_USART, direct_temp_buff, 14);
#endif
                state++;
                break;

            case 3:
#if 1
                /* send direct handle's wind curve */
                direct_wind_buff[13] = sFWG2_t.Direct_handle_parameter.set_wind;
                usart_sendData(DWIN_USART, direct_wind_buff, 14);
#endif
                state = 0;
                break;
            }
        }
    }
}






void Page_Code_Heartbeat_Packet(void)
{
    static uint8_t state = 0;

    if (sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_CODE_WORK)
    {
        switch (state)
        {
        case 0:
#if 1
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + CODE_MODE_HANDLE_SELECT), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.code_mode_handle_select);
            sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + START_STOP_CODE_MODE), DWIN_DATA_BITS,
                            sFWG2_t.general_parameter.code_mode_state);

            if (sFWG2_t.general_parameter.code_mode_handle_select == SELECT_DIRECT_HANDLE)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    /* send direct handle's temp curve */
                    if (sFWG2_t.Direct_handle_parameter.actual_temp >= 256)
                    {
                        code_temp_buff[12] = 1;
                    }
                    else
                    {
                        code_temp_buff[12] = 0;
                    }

                    code_temp_buff[13] = sFWG2_t.Direct_handle_parameter.actual_temp;
                    usart_sendData(DWIN_USART, code_temp_buff, 14);
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.Direct_handle_parameter.actual_temp);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    /* send direct handle's temp curve */
                    if (sFWG2_t.Direct_handle_parameter.actual_temp >= 256)
                    {
                        code_temp_buff[12] = 1;
                    }
                    else
                    {
                        code_temp_buff[12] = 0;
                    }

                    code_temp_buff[13] = sFWG2_t.Direct_handle_parameter.actual_temp;
                    usart_sendData(DWIN_USART, code_temp_buff, 14);
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.Direct_handle_parameter.actual_temp_f_display);
                }
            }
            else if (sFWG2_t.general_parameter.code_mode_handle_select == SELECT_CYCLONE_HANDLE)
            {
                if (sFWG2_t.general_parameter.temp_uint == CELSIUS)
                {
                    /* send cyclone handle's temp curve */
                    if (sFWG2_t.Cyclone_handle_parameter.actual_temp >= 256)
                    {
                        code_temp_buff[12] = 1;
                    }
                    else
                    {
                        code_temp_buff[12] = 0;
                    }

                    code_temp_buff[13] = sFWG2_t.Cyclone_handle_parameter.actual_temp;
                    usart_sendData(DWIN_USART, code_temp_buff, 14);
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.Cyclone_handle_parameter.actual_temp);
                }
                else if (sFWG2_t.general_parameter.temp_uint == FAHRENHEIT)
                {
                    /* send cyclone handle's temp curve */
                    if (sFWG2_t.Cyclone_handle_parameter.actual_temp >= 256)
                    {
                        code_temp_buff[12] = 1;
                    }
                    else
                    {
                        code_temp_buff[12] = 0;
                    }

                    code_temp_buff[13] = sFWG2_t.Cyclone_handle_parameter.actual_temp;
                    usart_sendData(DWIN_USART, code_temp_buff, 14);
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_TEMP), DWIN_DATA_BITS,
                                    sFWG2_t.Cyclone_handle_parameter.actual_temp_f_display);
                }
            }

#endif
            state++;
            break;

        case 1:
#if 1
            if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_START)
            {
                if (sFWG2_t.general_parameter.code_ch == 0)
                {
                    if (sFWG2_t.general_parameter.code_mode_step == CODE_PRE_HEAT)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code0_pre_wind);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code0_pre_wind;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_1)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code0_wind_1);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code0_wind_1 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_2)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code0_wind_2);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code0_wind_2 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_3)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code0_wind_3);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code0_wind_3 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 1)
                {
                    if (sFWG2_t.general_parameter.code_mode_step == CODE_PRE_HEAT)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code1_pre_wind);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code1_pre_wind;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_1)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code1_wind_1);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code1_wind_1 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_2)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code1_wind_2);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code1_wind_2 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_3)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code1_wind_3);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code1_wind_3 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 2)
                {
                    if (sFWG2_t.general_parameter.code_mode_step == CODE_PRE_HEAT)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code2_pre_wind);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code2_pre_wind;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_1)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code2_wind_1);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code2_wind_1 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_2)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code2_wind_2);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code2_wind_2 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_3)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code2_wind_3);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code2_wind_3 ;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                }
                else if (sFWG2_t.general_parameter.code_ch == 3)
                {
                    if (sFWG2_t.general_parameter.code_mode_step == CODE_PRE_HEAT)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code3_pre_wind);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code3_pre_wind;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_1)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code3_wind_1);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code3_wind_1;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_2)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code3_wind_2);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code3_wind_2;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_3)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.general_parameter.code3_wind_3);
                        /* send direct handle's wind curve */
                        code_wind_buff[13] = sFWG2_t.general_parameter.code3_wind_3;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                }
            }
            else if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_STOP)
            {
                if (sFWG2_t.general_parameter.code_mode_handle_select == SELECT_DIRECT_HANDLE)
                {
                    if (sFWG2_t.Direct_handle_parameter.actual_temp > 70)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.Direct_handle_parameter.stop_set_wind);
                        /* send direct handle's stop wind curve */
                        code_wind_buff[13] = sFWG2_t.Direct_handle_parameter.stop_set_wind;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        0);
                        /* send direct handle's stop wind curve */
                        code_wind_buff[13] = 0;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                }
                else if (sFWG2_t.general_parameter.code_mode_handle_select == SELECT_CYCLONE_HANDLE)
                {
                    if (sFWG2_t.Cyclone_handle_parameter.actual_temp > 70)
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        sFWG2_t.Cyclone_handle_parameter.stop_set_wind);
                        /* send direct handle's stop wind curve */
                        code_wind_buff[13] = sFWG2_t.Cyclone_handle_parameter.stop_set_wind;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                    else
                    {
                        sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_MODE_WIND), DWIN_DATA_BITS,
                                        0);
                        /* send direct handle's stop wind curve */
                        code_wind_buff[13] = 0;
                        usart_sendData(DWIN_USART, code_wind_buff, 14);
                    }
                }
            }

#endif
            state++;
            break;

        case 2:
#if 1
            if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_START)
            {
                sdwin.send_data(&sdwin, (0x61B3), DWIN_DATA_BITS,
                                RED_COLOR);
                /* show countdown time */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + 0x51), DWIN_DATA_BITS,
                                sFWG2_t.general_parameter.code_mode_countdown_time_display);
            }
            else if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_STOP)
            {
                sdwin.send_data(&sdwin, (0x61B3), DWIN_DATA_BITS,
                                WHITE_COLOR);
                /* show countdown time */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + 0x51), DWIN_DATA_BITS,
                                0);
            }

#endif
            state++;
            break;

        case 3:
#if 1
            if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_START)
            {
                /* show step run state */
                if (sFWG2_t.general_parameter.code_mode_step == CODE_PRE_HEAT)
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_STEP), DWIN_DATA_BITS,
                                    1);
                }
                else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_1)
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_STEP), DWIN_DATA_BITS,
                                    2);
                }
                else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_2)
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_STEP), DWIN_DATA_BITS,
                                    3);
                }
                else if (sFWG2_t.general_parameter.code_mode_step == CODE_STEUP_3)
                {
                    /* show select channel */
                    sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_STEP), DWIN_DATA_BITS,
                                    4);
                }
            }
            else if (sFWG2_t.general_parameter.code_mode_state == CODE_MODE_STOP)
            {
                /* show select channel */
                sdwin.send_data(&sdwin, (DWIN_BASE_ADDRESS + SHOW_CODE_STEP), DWIN_DATA_BITS,
                                0);
            }

#endif
            state = 0;
            break;
        }
    }
}

void Page_Switch(void)
{
    static bool first_in = false;

    if (first_in == false)
    {
        first_in = true;

        /* jump to work page */
        if (sFWG2_t.general_parameter.work_mode == NORMAL)
        {
            /* jump to work page 1*/
            page_switch[9] = PAGE_MAIN;
            usart_sendData(DWIN_USART, page_switch, 10);
            sFWG2_t.general_parameter.fwg2_page = PAGE_MAIN;
        }
        else if (sFWG2_t.general_parameter.work_mode == CODE)
        {
            /* jump to work page 28*/
            page_switch[9] = PAGE_SHOW_CODE_WORK;
            usart_sendData(DWIN_USART, page_switch, 10);
            sFWG2_t.general_parameter.fwg2_page = PAGE_SHOW_CODE_WORK;
        }
    }
    else
    {
        /* page switch */
        if (sFWG2_t.general_parameter.work_mode == NORMAL)
        {
            if (sFWG2_t.general_parameter.fwg2_page == 0x28)
            {
                /* return key press */
                if ((sFWG2_t.Cyclone_handle_position == IN_POSSITION && \
                        sFWG2_t.Direct_handle_position == IN_POSSITION) || \
                        (sFWG2_t.Cyclone_handle_position == NOT_IN_POSSITION && \
                         sFWG2_t.Direct_handle_position == NOT_IN_POSSITION))
                {
                    /* show direct handle and cyclone handle work page */
                    page_switch[9] = PAGE_MAIN;
                    usart_sendData(DWIN_USART, page_switch, 10);
                    sFWG2_t.general_parameter.fwg2_page = PAGE_MAIN;
                }
                else if (sFWG2_t.Cyclone_handle_state == HANDLE_WORKING && \
                         sFWG2_t.Cyclone_handle_position == NOT_IN_POSSITION)
                {
                    /* only show cyclone work page  */
                    page_switch[9] = PAGE_SHOW_CYCLONE_WORK;
                    usart_sendData(DWIN_USART, page_switch, 10);
                    sFWG2_t.general_parameter.fwg2_page = PAGE_SHOW_CYCLONE_WORK;
                }
                else if (sFWG2_t.Direct_handle_state == HANDLE_WORKING && \
                         sFWG2_t.Direct_handle_position == NOT_IN_POSSITION)
                {
                    /* only show direct work page  */
                    page_switch[9] = PAGE_SHOW_DIRECT_WORK;
                    usart_sendData(DWIN_USART, page_switch, 10);
                    sFWG2_t.general_parameter.fwg2_page = PAGE_SHOW_DIRECT_WORK;
                }
            }

            if (sFWG2_t.general_parameter.fwg2_page == PAGE_MAIN || \
                    sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_CYCLONE_WORK || \
                    sFWG2_t.general_parameter.fwg2_page == PAGE_SHOW_DIRECT_WORK)
            {
                if ((sFWG2_t.Cyclone_handle_position == NOT_IN_POSSITION && sFWG2_t.Direct_handle_position == NOT_IN_POSSITION) || \
                        (sFWG2_t.Cyclone_handle_position == IN_POSSITION && sFWG2_t.Direct_handle_position == IN_POSSITION))
                {
                    /* show direct handle and cyclone handle work page */
                    page_switch[9] = PAGE_MAIN;
                    usart_sendData(DWIN_USART, page_switch, 10);
                    sFWG2_t.general_parameter.fwg2_page = PAGE_MAIN;
                }
                else if (sFWG2_t.Cyclone_handle_position == IN_POSSITION && sFWG2_t.Direct_handle_position == NOT_IN_POSSITION)
                {
                    /* only show direct work page  */
                    page_switch[9] = PAGE_SHOW_DIRECT_WORK;
                    usart_sendData(DWIN_USART, page_switch, 10);
                    sFWG2_t.general_parameter.fwg2_page = PAGE_SHOW_DIRECT_WORK;
                }
                else if (sFWG2_t.Cyclone_handle_position == NOT_IN_POSSITION && sFWG2_t.Direct_handle_position == IN_POSSITION)
                {
                    /* only show cyclone work page  */
                    page_switch[9] = PAGE_SHOW_CYCLONE_WORK;
                    usart_sendData(DWIN_USART, page_switch, 10);
                    sFWG2_t.general_parameter.fwg2_page = PAGE_SHOW_CYCLONE_WORK;
                }
            }
        }
        else if (sFWG2_t.general_parameter.work_mode == CODE)
        {
            if (sFWG2_t.general_parameter.fwg2_page == 0x28)
            {
                /* jump to work page 28*/
                page_switch[9] = PAGE_SHOW_CODE_WORK;
                usart_sendData(DWIN_USART, page_switch, 10);
                sFWG2_t.general_parameter.fwg2_page = PAGE_SHOW_CODE_WORK;
            }
        }
    }
}

/* CRC16 check（X16+X15+X2+1）*/
static uint16_t CalcDwinCRC16(uint8_t *buf, uint16_t length)
{
    uint16_t crc16, data, val;
    crc16 = 0x0000;

    for (int i = 0; i < length; i++)
    {
        if ((i % 8) == 0)
        {
            data = (*buf++) << 8;
        }

        val = crc16 ^ data;
        crc16 = crc16 << 1;
        data = data << 1;

        if (val & 0x8000)
        {
            crc16 = crc16 ^ 0x8005;
        }
    }

    return crc16;
}

void DwinInitialization(DwinObjectType * dwin)
{
    if (dwin == NULL)
    {
        return;
    }

    dwin->checkMode = DwinNone;
    dwin->send_data = WriteDataToLCD;
    dwin->recv_data = RecvDataFromLCD;

    for (int i = 0; i < rxbuff_length; i++)
    {
        dwin->tx_buff[i] = 0x00;
        dwin->rx_buff[i] = 0x00;
    }

    dwin->read_size = 0;
}

/*********** (C) COPYRIGHT 1999-2019 Moonan Technology *********END OF FILE****/